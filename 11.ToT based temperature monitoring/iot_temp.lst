

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Thu Dec 08 07:43:10 2016

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_adc_init
    43                           	FNCALL	_main,_lcd_init
    44                           	FNCALL	_main,_command
    45                           	FNCALL	_main,_lcd_display
    46                           	FNCALL	_main,_serial_init
    47                           	FNCALL	_main,_gsm_init
    48                           	FNCALL	_main,_adc_conversion
    49                           	FNCALL	_main,_hexa_val
    50                           	FNCALL	_main,_gprs
    51                           	FNCALL	_gprs,_serial_display
    52                           	FNCALL	_gprs,_serial_out
    53                           	FNCALL	_hexa_val,___lwdiv
    54                           	FNCALL	_hexa_val,___lwmod
    55                           	FNCALL	_hexa_val,_lcd_data
    56                           	FNCALL	_gsm_init,_serial_display
    57                           	FNCALL	_gsm_init,_serial_out
    58                           	FNCALL	_lcd_display,_lcd_data
    59                           	FNCALL	_lcd_init,_command
    60                           	FNCALL	_serial_display,_serial_out
    61                           	FNROOT	_main
    62                           	global	_a
    63                           	global	_c
    64                           	global	_d
    65                           	global	_k
    66                           	global	_l
    67                           	global	_m
    68                           	global	_n
    69                           	global	_b
    70                           	global	_j
    71                           	global	_ADCON0
    72                           psect	text298,local,class=CODE,delta=2
    73                           global __ptext298
    74  0000                     __ptext298:
    75  001F                     _ADCON0	set	31
    76                           	global	_ADRESH
    77  001E                     _ADRESH	set	30
    78                           	global	_PORTA
    79  0005                     _PORTA	set	5
    80                           	global	_PORTC
    81  0007                     _PORTC	set	7
    82                           	global	_PORTD
    83  0008                     _PORTD	set	8
    84                           	global	_TXREG
    85  0019                     _TXREG	set	25
    86                           	global	_ADGO
    87  00FA                     _ADGO	set	250
    88                           	global	_CREN
    89  00C4                     _CREN	set	196
    90                           	global	_GIE
    91  005F                     _GIE	set	95
    92                           	global	_PEIE
    93  005E                     _PEIE	set	94
    94                           	global	_RA2
    95  002A                     _RA2	set	42
    96                           	global	_RA3
    97  002B                     _RA3	set	43
    98                           	global	_SPEN
    99  00C7                     _SPEN	set	199
   100                           	global	_TXIF
   101  0064                     _TXIF	set	100
   102                           	global	_ADCON1
   103  009F                     _ADCON1	set	159
   104                           	global	_ADRESL
   105  009E                     _ADRESL	set	158
   106                           	global	_SPBRG
   107  0099                     _SPBRG	set	153
   108                           	global	_TRISA
   109  0085                     _TRISA	set	133
   110                           	global	_TRISC
   111  0087                     _TRISC	set	135
   112                           	global	_TRISD
   113  0088                     _TRISD	set	136
   114                           	global	_BRGH
   115  04C2                     _BRGH	set	1218
   116                           	global	_RCIE
   117  0465                     _RCIE	set	1125
   118                           	global	_SYNC
   119  04C4                     _SYNC	set	1220
   120                           	global	_TXEN
   121  04C5                     _TXEN	set	1221
   122                           psect	strings,class=STRING,delta=2
   123                           global __pstrings
   124  0003                     __pstrings:
   125                           ;	global	stringdir,stringtab,__stringbase
   126  0003                     stringtab:
   127                           ;	String table - string pointers are 1 byte each
   128  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   129  0003  3000               movlw high(stringdir)
   130  0004  008A               movwf pclath
   131  0005  0804               movf fsr,w
   132  0006  0A84               incf fsr
   133  0007  0782               	addwf pc
   134  0008                     __stringbase:
   135  0008  3400               	retlw	0
   136                           psect	strings
   137                           	
   138  0009                     STR_10:	
   139  0009  346B               	retlw	107	;'k'
   140  000A  3472               	retlw	114	;'r'
   141  000B  3469               	retlw	105	;'i'
   142  000C  3473               	retlw	115	;'s'
   143  000D  3468               	retlw	104	;'h'
   144  000E  3474               	retlw	116	;'t'
   145  000F  3465               	retlw	101	;'e'
   146  0010  3463               	retlw	99	;'c'
   147  0011  342E               	retlw	46	;'.'
   148  0012  3463               	retlw	99	;'c'
   149  0013  346F               	retlw	111	;'o'
   150  0014  342E               	retlw	46	;'.'
   151  0015  3469               	retlw	105	;'i'
   152  0016  346E               	retlw	110	;'n'
   153  0017  342F               	retlw	47	;'/'
   154  0018  346D               	retlw	109	;'m'
   155  0019  3432               	retlw	50	;'2'
   156  001A  346D               	retlw	109	;'m'
   157  001B  343F               	retlw	63	;'?'
   158  001C  3453               	retlw	83	;'S'
   159  001D  343D               	retlw	61	;'='
   160  001E  3400               	retlw	0
   161                           psect	strings
   162                           	
   163  001F                     STR_13:	
   164  001F  3441               	retlw	65	;'A'
   165  0020  3454               	retlw	84	;'T'
   166  0021  342B               	retlw	43	;'+'
   167  0022  3448               	retlw	72	;'H'
   168  0023  3454               	retlw	84	;'T'
   169  0024  3454               	retlw	84	;'T'
   170  0025  3450               	retlw	80	;'P'
   171  0026  3441               	retlw	65	;'A'
   172  0027  3443               	retlw	67	;'C'
   173  0028  3454               	retlw	84	;'T'
   174  0029  3449               	retlw	73	;'I'
   175  002A  344F               	retlw	79	;'O'
   176  002B  344E               	retlw	78	;'N'
   177  002C  343D               	retlw	61	;'='
   178  002D  3431               	retlw	49	;'1'
   179  002E  3400               	retlw	0
   180                           psect	strings
   181                           	
   182  002F                     STR_6:	
   183  002F  3441               	retlw	65	;'A'
   184  0030  3454               	retlw	84	;'T'
   185  0031  342B               	retlw	43	;'+'
   186  0032  3453               	retlw	83	;'S'
   187  0033  3441               	retlw	65	;'A'
   188  0034  3450               	retlw	80	;'P'
   189  0035  3442               	retlw	66	;'B'
   190  0036  3452               	retlw	82	;'R'
   191  0037  343D               	retlw	61	;'='
   192  0038  3431               	retlw	49	;'1'
   193  0039  342C               	retlw	44	;','
   194  003A  3431               	retlw	49	;'1'
   195  003B  3400               	retlw	0
   196                           psect	strings
   197                           	
   198  003C                     STR_8:	
   199  003C  3441               	retlw	65	;'A'
   200  003D  3454               	retlw	84	;'T'
   201  003E  342B               	retlw	43	;'+'
   202  003F  3448               	retlw	72	;'H'
   203  0040  3454               	retlw	84	;'T'
   204  0041  3454               	retlw	84	;'T'
   205  0042  3450               	retlw	80	;'P'
   206  0043  3450               	retlw	80	;'P'
   207  0044  3441               	retlw	65	;'A'
   208  0045  3452               	retlw	82	;'R'
   209  0046  3441               	retlw	65	;'A'
   210  0047  343D               	retlw	61	;'='
   211  0048  3400               	retlw	0
   212                           psect	strings
   213                           	
   214  0049                     STR_7:	
   215  0049  3441               	retlw	65	;'A'
   216  004A  3454               	retlw	84	;'T'
   217  004B  342B               	retlw	43	;'+'
   218  004C  3448               	retlw	72	;'H'
   219  004D  3454               	retlw	84	;'T'
   220  004E  3454               	retlw	84	;'T'
   221  004F  3450               	retlw	80	;'P'
   222  0050  3449               	retlw	73	;'I'
   223  0051  344E               	retlw	78	;'N'
   224  0052  3449               	retlw	73	;'I'
   225  0053  3454               	retlw	84	;'T'
   226  0054  3400               	retlw	0
   227                           psect	strings
   228                           	
   229  0055                     STR_5:	
   230  0055  3441               	retlw	65	;'A'
   231  0056  3454               	retlw	84	;'T'
   232  0057  342B               	retlw	43	;'+'
   233  0058  3443               	retlw	67	;'C'
   234  0059  3452               	retlw	82	;'R'
   235  005A  3445               	retlw	69	;'E'
   236  005B  3447               	retlw	71	;'G'
   237  005C  343F               	retlw	63	;'?'
   238  005D  3400               	retlw	0
   239                           psect	strings
   240                           	
   241  005E                     STR_1:	
   242  005E  3454               	retlw	84	;'T'
   243  005F  3445               	retlw	69	;'E'
   244  0060  344D               	retlw	77	;'M'
   245  0061  3450               	retlw	80	;'P'
   246  0062  343A               	retlw	58	;':'
   247  0063  3400               	retlw	0
   248                           psect	strings
   249                           	
   250  0064                     STR_12:	
   251  0064  3443               	retlw	67	;'C'
   252  0065  3449               	retlw	73	;'I'
   253  0066  3444               	retlw	68	;'D'
   254  0067  3400               	retlw	0
   255                           psect	strings
   256                           	
   257  0068                     STR_9:	
   258  0068  3455               	retlw	85	;'U'
   259  0069  3452               	retlw	82	;'R'
   260  006A  344C               	retlw	76	;'L'
   261  006B  3400               	retlw	0
   262                           psect	strings
   263                           	
   264  006C                     STR_2:	
   265  006C  3444               	retlw	68	;'D'
   266  006D  3465               	retlw	101	;'e'
   267  006E  3467               	retlw	103	;'g'
   268  006F  3400               	retlw	0
   269                           psect	strings
   270                           	
   271  0070                     STR_3:	
   272  0070  3441               	retlw	65	;'A'
   273  0071  3454               	retlw	84	;'T'
   274  0072  3400               	retlw	0
   275                           psect	strings
   276  0070                     STR_4	equ	STR_3+0
   277  003C                     STR_11	equ	STR_8+0
   278                           	file	"iot_temp.as"
   279                           	line	#
   280                           psect cinit,class=CODE,delta=2
   281                           global start_initialization
   282  045F                     start_initialization:
   283                           
   284                           psect	bssCOMMON,class=COMMON,space=1
   285                           global __pbssCOMMON
   286  007A                     __pbssCOMMON:
   287  007A                     _b:
   288  007A                            ds      2
   289                           
   290  007C                     _j:
   291  007C                            ds      2
   292                           
   293                           psect	bssBANK0,class=BANK0,space=1
   294                           global __pbssBANK0
   295  0020                     __pbssBANK0:
   296  0020                     _a:
   297  0020                            ds      2
   298                           
   299  0022                     _c:
   300  0022                            ds      2
   301                           
   302  0024                     _d:
   303  0024                            ds      2
   304                           
   305  0026                     _k:
   306  0026                            ds      2
   307                           
   308  0028                     _l:
   309  0028                            ds      2
   310                           
   311  002A                     _m:
   312  002A                            ds      2
   313                           
   314  002C                     _n:
   315  002C                            ds      2
   316                           
   317                           ; Clear objects allocated to COMMON
   318                           psect cinit,class=CODE,delta=2
   319  045F  01FA               	clrf	((__pbssCOMMON)+0)&07Fh
   320  0460  01FB               	clrf	((__pbssCOMMON)+1)&07Fh
   321  0461  01FC               	clrf	((__pbssCOMMON)+2)&07Fh
   322  0462  01FD               	clrf	((__pbssCOMMON)+3)&07Fh
   323                           ; Clear objects allocated to BANK0
   324                           psect cinit,class=CODE,delta=2
   325  0463  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   326  0464  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   327  0465  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   328  0466  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   329  0467  01A4               	clrf	((__pbssBANK0)+4)&07Fh
   330  0468  01A5               	clrf	((__pbssBANK0)+5)&07Fh
   331  0469  01A6               	clrf	((__pbssBANK0)+6)&07Fh
   332  046A  01A7               	clrf	((__pbssBANK0)+7)&07Fh
   333  046B  01A8               	clrf	((__pbssBANK0)+8)&07Fh
   334  046C  01A9               	clrf	((__pbssBANK0)+9)&07Fh
   335  046D  01AA               	clrf	((__pbssBANK0)+10)&07Fh
   336  046E  01AB               	clrf	((__pbssBANK0)+11)&07Fh
   337  046F  01AC               	clrf	((__pbssBANK0)+12)&07Fh
   338  0470  01AD               	clrf	((__pbssBANK0)+13)&07Fh
   339                           psect cinit,class=CODE,delta=2
   340                           global end_of_initialization
   341                           
   342                           ;End of C runtime variable initialization code
   343                           
   344  0471                     end_of_initialization:
   345  0471  0183               clrf status
   346  0472  120A  118A  2DE5   ljmp _main	;jump to C main() function
   347                           psect	cstackCOMMON,class=COMMON,space=1
   348                           global __pcstackCOMMON
   349  0070                     __pcstackCOMMON:
   350                           	global	?_adc_init
   351  0070                     ?_adc_init:	; 0 bytes @ 0x0
   352                           	global	??_adc_init
   353  0070                     ??_adc_init:	; 0 bytes @ 0x0
   354                           	global	?_lcd_init
   355  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   356                           	global	?_command
   357  0070                     ?_command:	; 0 bytes @ 0x0
   358                           	global	??_command
   359  0070                     ??_command:	; 0 bytes @ 0x0
   360                           	global	?_lcd_display
   361  0070                     ?_lcd_display:	; 0 bytes @ 0x0
   362                           	global	?_serial_init
   363  0070                     ?_serial_init:	; 0 bytes @ 0x0
   364                           	global	??_serial_init
   365  0070                     ??_serial_init:	; 0 bytes @ 0x0
   366                           	global	?_gsm_init
   367  0070                     ?_gsm_init:	; 0 bytes @ 0x0
   368                           	global	?_adc_conversion
   369  0070                     ?_adc_conversion:	; 0 bytes @ 0x0
   370                           	global	??_adc_conversion
   371  0070                     ??_adc_conversion:	; 0 bytes @ 0x0
   372                           	global	?_gprs
   373  0070                     ?_gprs:	; 0 bytes @ 0x0
   374                           	global	?_serial_display
   375  0070                     ?_serial_display:	; 0 bytes @ 0x0
   376                           	global	?_serial_out
   377  0070                     ?_serial_out:	; 0 bytes @ 0x0
   378                           	global	??_serial_out
   379  0070                     ??_serial_out:	; 0 bytes @ 0x0
   380                           	global	?_lcd_data
   381  0070                     ?_lcd_data:	; 0 bytes @ 0x0
   382                           	global	??_lcd_data
   383  0070                     ??_lcd_data:	; 0 bytes @ 0x0
   384                           	global	?_main
   385  0070                     ?_main:	; 0 bytes @ 0x0
   386                           	global	?___lwdiv
   387  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   388                           	global	?___lwmod
   389  0070                     ?___lwmod:	; 2 bytes @ 0x0
   390                           	global	serial_out@z
   391  0070                     serial_out@z:	; 1 bytes @ 0x0
   392                           	global	___lwdiv@divisor
   393  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   394                           	global	___lwmod@divisor
   395  0070                     ___lwmod@divisor:	; 2 bytes @ 0x0
   396  0070                     	ds	1
   397                           	global	??_serial_display
   398  0071                     ??_serial_display:	; 0 bytes @ 0x1
   399  0071                     	ds	1
   400                           	global	serial_display@w
   401  0072                     serial_display@w:	; 1 bytes @ 0x2
   402                           	global	command@com
   403  0072                     command@com:	; 1 bytes @ 0x2
   404                           	global	lcd_data@D
   405  0072                     lcd_data@D:	; 1 bytes @ 0x2
   406                           	global	___lwdiv@dividend
   407  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   408                           	global	___lwmod@dividend
   409  0072                     ___lwmod@dividend:	; 2 bytes @ 0x2
   410  0072                     	ds	1
   411                           	global	??_lcd_init
   412  0073                     ??_lcd_init:	; 0 bytes @ 0x3
   413                           	global	??_lcd_display
   414  0073                     ??_lcd_display:	; 0 bytes @ 0x3
   415                           	global	??_gsm_init
   416  0073                     ??_gsm_init:	; 0 bytes @ 0x3
   417                           	global	??_gprs
   418  0073                     ??_gprs:	; 0 bytes @ 0x3
   419  0073                     	ds	1
   420                           	global	??___lwdiv
   421  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   422                           	global	??___lwmod
   423  0074                     ??___lwmod:	; 0 bytes @ 0x4
   424  0074                     	ds	1
   425                           	global	lcd_display@word
   426  0075                     lcd_display@word:	; 1 bytes @ 0x5
   427                           	global	___lwmod@counter
   428  0075                     ___lwmod@counter:	; 1 bytes @ 0x5
   429                           	global	___lwdiv@quotient
   430  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   431  0075                     	ds	2
   432                           	global	___lwdiv@counter
   433  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   434  0077                     	ds	1
   435                           	global	?_hexa_val
   436  0078                     ?_hexa_val:	; 0 bytes @ 0x8
   437                           	global	hexa_val@val
   438  0078                     hexa_val@val:	; 2 bytes @ 0x8
   439  0078                     	ds	2
   440                           	global	??_hexa_val
   441  007A                     ??_hexa_val:	; 0 bytes @ 0xA
   442                           	global	??_main
   443  007A                     ??_main:	; 0 bytes @ 0xA
   444 ;;Data sizes: Strings 106, constant 0, data 0, bss 18, persistent 0 stack 0
   445 ;;Auto spaces:   Size  Autos    Used
   446 ;; COMMON          14     10      14
   447 ;; BANK0           80      0      14
   448 ;; BANK1           80      0       0
   449 ;; BANK3           96      0       0
   450 ;; BANK2           96      0       0
   451                           
   452 ;;
   453 ;; Pointer list with targets:
   454                           
   455 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   456 ;;
   457 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   458 ;;
   459 ;; lcd_display@word	PTR const unsigned char  size(1) Largest target is 6
   460 ;;		 -> STR_2(CODE[4]), STR_1(CODE[6]), 
   461 ;;
   462 ;; serial_display@w	PTR const unsigned char  size(1) Largest target is 22
   463 ;;		 -> STR_13(CODE[16]), STR_12(CODE[4]), STR_11(CODE[13]), STR_10(CODE[22]), 
   464 ;;		 -> STR_9(CODE[4]), STR_8(CODE[13]), STR_7(CODE[12]), STR_6(CODE[13]), 
   465 ;;		 -> STR_5(CODE[9]), STR_4(CODE[3]), STR_3(CODE[3]), 
   466 ;;
   467                           
   468                           
   469 ;;
   470 ;; Critical Paths under _main in COMMON
   471 ;;
   472 ;;   _main->_hexa_val
   473 ;;   _gprs->_serial_display
   474 ;;   _hexa_val->___lwdiv
   475 ;;   _gsm_init->_serial_display
   476 ;;   _lcd_display->_lcd_data
   477 ;;   _lcd_init->_command
   478 ;;   _serial_display->_serial_out
   479 ;;
   480 ;; Critical Paths under _main in BANK0
   481 ;;
   482 ;;   None.
   483 ;;
   484 ;; Critical Paths under _main in BANK1
   485 ;;
   486 ;;   None.
   487 ;;
   488 ;; Critical Paths under _main in BANK3
   489 ;;
   490 ;;   None.
   491 ;;
   492 ;; Critical Paths under _main in BANK2
   493 ;;
   494 ;;   None.
   495                           
   496 ;;
   497 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   498 ;;
   499                           
   500 ;;
   501 ;;Call Graph Tables:
   502 ;;
   503 ;; ---------------------------------------------------------------------------------
   504 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   505 ;; ---------------------------------------------------------------------------------
   506 ;; (0) _main                                                 0     0      0     676
   507 ;;                           _adc_init
   508 ;;                           _lcd_init
   509 ;;                            _command
   510 ;;                        _lcd_display
   511 ;;                        _serial_init
   512 ;;                           _gsm_init
   513 ;;                     _adc_conversion
   514 ;;                           _hexa_val
   515 ;;                               _gprs
   516 ;; ---------------------------------------------------------------------------------
   517 ;; (1) _gprs                                                 3     3      0      89
   518 ;;                                              3 COMMON     3     3      0
   519 ;;                     _serial_display
   520 ;;                         _serial_out
   521 ;; ---------------------------------------------------------------------------------
   522 ;; (1) _hexa_val                                             2     0      2     387
   523 ;;                                              8 COMMON     2     0      2
   524 ;;                            ___lwdiv
   525 ;;                            ___lwmod
   526 ;;                           _lcd_data
   527 ;; ---------------------------------------------------------------------------------
   528 ;; (1) _gsm_init                                             3     3      0      89
   529 ;;                                              3 COMMON     3     3      0
   530 ;;                     _serial_display
   531 ;;                         _serial_out
   532 ;; ---------------------------------------------------------------------------------
   533 ;; (1) _lcd_display                                          3     3      0      67
   534 ;;                                              3 COMMON     3     3      0
   535 ;;                           _lcd_data
   536 ;; ---------------------------------------------------------------------------------
   537 ;; (1) _lcd_init                                             0     0      0      22
   538 ;;                            _command
   539 ;; ---------------------------------------------------------------------------------
   540 ;; (2) _lcd_data                                             3     3      0      22
   541 ;;                                              0 COMMON     3     3      0
   542 ;; ---------------------------------------------------------------------------------
   543 ;; (2) _serial_display                                       2     2      0      67
   544 ;;                                              1 COMMON     2     2      0
   545 ;;                         _serial_out
   546 ;; ---------------------------------------------------------------------------------
   547 ;; (1) _command                                              3     3      0      22
   548 ;;                                              0 COMMON     3     3      0
   549 ;; ---------------------------------------------------------------------------------
   550 ;; (2) ___lwmod                                              6     2      4     159
   551 ;;                                              0 COMMON     6     2      4
   552 ;; ---------------------------------------------------------------------------------
   553 ;; (2) ___lwdiv                                              8     4      4     162
   554 ;;                                              0 COMMON     8     4      4
   555 ;; ---------------------------------------------------------------------------------
   556 ;; (2) _serial_out                                           1     1      0      22
   557 ;;                                              0 COMMON     1     1      0
   558 ;; ---------------------------------------------------------------------------------
   559 ;; (1) _adc_conversion                                       2     2      0       0
   560 ;;                                              0 COMMON     2     2      0
   561 ;; ---------------------------------------------------------------------------------
   562 ;; (1) _serial_init                                          0     0      0       0
   563 ;; ---------------------------------------------------------------------------------
   564 ;; (1) _adc_init                                             0     0      0       0
   565 ;; ---------------------------------------------------------------------------------
   566 ;; Estimated maximum stack depth 2
   567 ;; ---------------------------------------------------------------------------------
   568                           
   569 ;; Call Graph Graphs:
   570                           
   571 ;; _main (ROOT)
   572 ;;   _adc_init
   573 ;;   _lcd_init
   574 ;;     _command
   575 ;;   _command
   576 ;;   _lcd_display
   577 ;;     _lcd_data
   578 ;;   _serial_init
   579 ;;   _gsm_init
   580 ;;     _serial_display
   581 ;;       _serial_out
   582 ;;     _serial_out
   583 ;;   _adc_conversion
   584 ;;   _hexa_val
   585 ;;     ___lwdiv
   586 ;;     ___lwmod
   587 ;;     _lcd_data
   588 ;;   _gprs
   589 ;;     _serial_display
   590 ;;       _serial_out
   591 ;;     _serial_out
   592 ;;
   593                           
   594 ;; Address spaces:
   595                           
   596 ;;Name               Size   Autos  Total    Cost      Usage
   597 ;;BITCOMMON            E      0       0       0        0.0%
   598 ;;EEDATA             100      0       0       0        0.0%
   599 ;;NULL                 0      0       0       0        0.0%
   600 ;;CODE                 0      0       0       0        0.0%
   601 ;;COMMON               E      A       E       1      100.0%
   602 ;;BITSFR0              0      0       0       1        0.0%
   603 ;;SFR0                 0      0       0       1        0.0%
   604 ;;BITSFR1              0      0       0       2        0.0%
   605 ;;SFR1                 0      0       0       2        0.0%
   606 ;;STACK                0      0       3       2        0.0%
   607 ;;ABS                  0      0      1C       3        0.0%
   608 ;;BITBANK0            50      0       0       4        0.0%
   609 ;;BITSFR3              0      0       0       4        0.0%
   610 ;;SFR3                 0      0       0       4        0.0%
   611 ;;BANK0               50      0       E       5       17.5%
   612 ;;BITSFR2              0      0       0       5        0.0%
   613 ;;SFR2                 0      0       0       5        0.0%
   614 ;;BITBANK1            50      0       0       6        0.0%
   615 ;;BANK1               50      0       0       7        0.0%
   616 ;;BITBANK3            60      0       0       8        0.0%
   617 ;;BANK3               60      0       0       9        0.0%
   618 ;;BITBANK2            60      0       0      10        0.0%
   619 ;;BANK2               60      0       0      11        0.0%
   620 ;;DATA                 0      0      1F      12        0.0%
   621                           
   622                           	global	_main
   623                           psect	maintext,global,class=CODE,delta=2
   624                           global __pmaintext
   625  05E5                     __pmaintext:
   626                           
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 24 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitori
       ng\main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;		None               void
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 17F/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels required when called:    3
   649 ;; This function calls:
   650 ;;		_adc_init
   651 ;;		_lcd_init
   652 ;;		_command
   653 ;;		_lcd_display
   654 ;;		_serial_init
   655 ;;		_gsm_init
   656 ;;		_adc_conversion
   657 ;;		_hexa_val
   658 ;;		_gprs
   659 ;; This function is called by:
   660 ;;		Startup code after reset
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           psect	maintext
   664                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
   665                           	line	24
   666                           	global	__size_of_main
   667  0063                     	__size_of_main	equ	__end_of_main-_main
   668                           	
   669  05E5                     _main:	
   670                           	opt	stack 5
   671                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   672                           	line	25
   673                           	
   674  05E5                     l2261:	
   675                           ;main.c: 25: TRISA=0x01;
   676  05E5  3001               	movlw	(01h)
   677  05E6  1683               	bsf	status, 5	;RP0=1, select bank1
   678  05E7  1303               	bcf	status, 6	;RP1=0, select bank1
   679  05E8  0085               	movwf	(133)^080h	;volatile
   680                           	line	26
   681                           	
   682  05E9                     l2263:	
   683                           ;main.c: 26: PORTA=0x00;
   684  05E9  1283               	bcf	status, 5	;RP0=0, select bank0
   685  05EA  1303               	bcf	status, 6	;RP1=0, select bank0
   686  05EB  0185               	clrf	(5)	;volatile
   687                           	line	27
   688                           	
   689  05EC                     l2265:	
   690                           ;main.c: 27: TRISD=0x00;
   691  05EC  1683               	bsf	status, 5	;RP0=1, select bank1
   692  05ED  1303               	bcf	status, 6	;RP1=0, select bank1
   693  05EE  0188               	clrf	(136)^080h	;volatile
   694                           	line	28
   695                           	
   696  05EF                     l2267:	
   697                           ;main.c: 28: PORTD=0x00;
   698  05EF  1283               	bcf	status, 5	;RP0=0, select bank0
   699  05F0  1303               	bcf	status, 6	;RP1=0, select bank0
   700  05F1  0188               	clrf	(8)	;volatile
   701                           	line	29
   702                           	
   703  05F2                     l2269:	
   704                           ;main.c: 29: TRISC=0x80;
   705  05F2  3080               	movlw	(080h)
   706  05F3  1683               	bsf	status, 5	;RP0=1, select bank1
   707  05F4  1303               	bcf	status, 6	;RP1=0, select bank1
   708  05F5  0087               	movwf	(135)^080h	;volatile
   709                           	line	30
   710                           ;main.c: 30: PORTC=0x00;
   711  05F6  1283               	bcf	status, 5	;RP0=0, select bank0
   712  05F7  1303               	bcf	status, 6	;RP1=0, select bank0
   713  05F8  0187               	clrf	(7)	;volatile
   714                           	line	31
   715                           	
   716  05F9                     l2271:	
   717                           ;main.c: 31: adc_init();
   718  05F9  120A  118A  2439   	fcall	_adc_init
              120A  118A         
   719                           	line	32
   720                           	
   721  05FE                     l2273:	
   722                           ;main.c: 32: lcd_init();
   723  05FE  120A  118A  2475   	fcall	_lcd_init
              120A  118A         
   724                           	line	33
   725                           	
   726  0603                     l2275:	
   727                           ;main.c: 33: command(0x80);
   728  0603  3080               	movlw	(080h)
   729  0604  120A  118A  248E   	fcall	_command
              120A  118A         
   730                           	line	34
   731                           	
   732  0609                     l2277:	
   733                           ;main.c: 34: lcd_display("TEMP:");
   734  0609  3056               	movlw	((STR_1-__stringbase))&0ffh
   735  060A  120A  118A  24E9   	fcall	_lcd_display
              120A  118A         
   736                           	line	35
   737                           	
   738  060F                     l2279:	
   739                           ;main.c: 35: command(0x87);
   740  060F  3087               	movlw	(087h)
   741  0610  120A  118A  248E   	fcall	_command
              120A  118A         
   742                           	line	36
   743                           	
   744  0615                     l2281:	
   745                           ;main.c: 36: lcd_display("Deg");
   746  0615  3064               	movlw	((STR_2-__stringbase))&0ffh
   747  0616  120A  118A  24E9   	fcall	_lcd_display
              120A  118A         
   748                           	line	37
   749                           	
   750  061B                     l2283:	
   751                           ;main.c: 37: serial_init();
   752  061B  120A  118A  244A   	fcall	_serial_init
              120A  118A         
   753                           	line	38
   754                           	
   755  0620                     l2285:	
   756                           ;main.c: 38: gsm_init();
   757  0620  120A  118A  2648   	fcall	_gsm_init
              120A  118A         
   758  0625  2E26               	goto	l2287
   759                           	line	39
   760                           ;main.c: 39: while(1)
   761                           	
   762  0626                     l603:	
   763                           	line	41
   764                           	
   765  0626                     l2287:	
   766                           ;main.c: 40: {
   767                           ;main.c: 41: adc_conversion();
   768  0626  120A  118A  2512   	fcall	_adc_conversion
              120A  118A         
   769                           	line	42
   770                           	
   771  062B                     l2289:	
   772                           ;main.c: 42: command(0x85);
   773  062B  3085               	movlw	(085h)
   774  062C  120A  118A  248E   	fcall	_command
              120A  118A         
   775                           	line	43
   776                           	
   777  0631                     l2291:	
   778                           ;main.c: 43: hexa_val(c);
   779  0631  1283               	bcf	status, 5	;RP0=0, select bank0
   780  0632  1303               	bcf	status, 6	;RP1=0, select bank0
   781  0633  0823               	movf	(_c+1),w
   782  0634  01F9               	clrf	(?_hexa_val+1)
   783  0635  07F9               	addwf	(?_hexa_val+1)
   784  0636  0822               	movf	(_c),w
   785  0637  01F8               	clrf	(?_hexa_val)
   786  0638  07F8               	addwf	(?_hexa_val)
   787                           
   788  0639  120A  118A  26C4   	fcall	_hexa_val
              120A  118A         
   789                           	line	44
   790                           	
   791  063E                     l2293:	
   792                           ;main.c: 44: gprs();
   793  063E  120A  118A  275D   	fcall	_gprs
              120A  118A         
   794  0643  2E26               	goto	l2287
   795                           	line	45
   796                           	
   797  0644                     l604:	
   798                           	line	39
   799  0644  2E26               	goto	l2287
   800                           	
   801  0645                     l605:	
   802                           	line	46
   803                           	
   804  0645                     l606:	
   805                           	global	start
   806  0645  120A  118A  2800   	ljmp	start
   807                           	opt stack 0
   808                           GLOBAL	__end_of_main
   809  0648                     	__end_of_main:
   810 ;; =============== function _main ends ============
   811                           
   812                           	signat	_main,88
   813                           	global	_gprs
   814                           psect	text299,local,class=CODE,delta=2
   815                           global __ptext299
   816  075D                     __ptext299:
   817                           
   818 ;; *************** function _gprs *****************
   819 ;; Defined at:
   820 ;;		line 78 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitori
       ng\main.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;		None               void
   827 ;; Registers used:
   828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0
   836 ;;      Temps:          3       0       0       0       0
   837 ;;      Totals:         3       0       0       0       0
   838 ;;Total ram usage:        3 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    2
   841 ;; This function calls:
   842 ;;		_serial_display
   843 ;;		_serial_out
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           psect	text299
   849                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
   850                           	line	78
   851                           	global	__size_of_gprs
   852  00A3                     	__size_of_gprs	equ	__end_of_gprs-_gprs
   853                           	
   854  075D                     _gprs:	
   855                           	opt	stack 5
   856                           ; Regs used in _gprs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   857                           	line	79
   858                           	
   859  075D                     l2223:	
   860                           ;main.c: 79: serial_display("AT+HTTPPARA=");
   861  075D  3034               	movlw	((STR_8-__stringbase))&0ffh
   862  075E  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
   863                           	line	80
   864                           	
   865  0763                     l2225:	
   866                           ;main.c: 80: serial_out('"');
   867  0763  3022               	movlw	(022h)
   868  0764  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   869                           	line	81
   870                           	
   871  0769                     l2227:	
   872                           ;main.c: 81: serial_display("URL");
   873  0769  3060               	movlw	((STR_9-__stringbase))&0ffh
   874  076A  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
   875                           	line	82
   876                           ;main.c: 82: serial_out('"');
   877  076F  3022               	movlw	(022h)
   878  0770  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   879                           	line	83
   880                           ;main.c: 83: serial_out(',');
   881  0775  302C               	movlw	(02Ch)
   882  0776  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   883                           	line	84
   884                           ;main.c: 84: serial_out('"');
   885  077B  3022               	movlw	(022h)
   886  077C  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   887                           	line	85
   888                           	
   889  0781                     l2229:	
   890                           ;main.c: 85: serial_display("krishtec.co.in/m2m?S=");
   891  0781  3001               	movlw	((STR_10-__stringbase))&0ffh
   892  0782  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
   893                           	line	86
   894                           	
   895  0787                     l2231:	
   896                           ;main.c: 86: serial_out(m+0x30);
   897  0787  1283               	bcf	status, 5	;RP0=0, select bank0
   898  0788  1303               	bcf	status, 6	;RP1=0, select bank0
   899  0789  082A               	movf	(_m),w
   900  078A  3E30               	addlw	030h
   901  078B  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   902                           	line	87
   903                           	
   904  0790                     l2233:	
   905                           ;main.c: 87: serial_out(n+0x30);
   906  0790  1283               	bcf	status, 5	;RP0=0, select bank0
   907  0791  1303               	bcf	status, 6	;RP1=0, select bank0
   908  0792  082C               	movf	(_n),w
   909  0793  3E30               	addlw	030h
   910  0794  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   911                           	line	88
   912                           	
   913  0799                     l2235:	
   914                           ;main.c: 88: serial_out('"');
   915  0799  3022               	movlw	(022h)
   916  079A  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   917                           	line	89
   918                           	
   919  079F                     l2237:	
   920                           ;main.c: 89: serial_out(0x0d);
   921  079F  300D               	movlw	(0Dh)
   922  07A0  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   923                           	line	90
   924                           	
   925  07A5                     l2239:	
   926                           ;main.c: 90: _delay((unsigned long)((1000)*(20e6/4000.0)));
   927                           	opt asmopt_off
   928  07A5  301A               movlw  26
   929  07A6  00F5               movwf	((??_gprs+0)+0+2),f
   930  07A7  3045               movlw	69
   931  07A8  00F4               movwf	((??_gprs+0)+0+1),f
   932  07A9  307E               	movlw	126
   933  07AA  00F3               movwf	((??_gprs+0)+0),f
   934  07AB                     u2397:
   935  07AB  0BF3               	decfsz	((??_gprs+0)+0),f
   936  07AC  2FAB               	goto	u2397
   937  07AD  0BF4               	decfsz	((??_gprs+0)+0+1),f
   938  07AE  2FAB               	goto	u2397
   939  07AF  0BF5               	decfsz	((??_gprs+0)+0+2),f
   940  07B0  2FAB               	goto	u2397
   941                           opt asmopt_on
   942                           
   943                           	line	91
   944                           	
   945  07B1                     l2241:	
   946                           ;main.c: 91: serial_display("AT+HTTPPARA=");
   947  07B1  3034               	movlw	((STR_11-__stringbase))&0ffh
   948  07B2  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
   949                           	line	92
   950                           	
   951  07B7                     l2243:	
   952                           ;main.c: 92: serial_out('"');
   953  07B7  3022               	movlw	(022h)
   954  07B8  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   955                           	line	93
   956                           	
   957  07BD                     l2245:	
   958                           ;main.c: 93: serial_display("CID");
   959  07BD  305C               	movlw	((STR_12-__stringbase))&0ffh
   960  07BE  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
   961                           	line	94
   962                           	
   963  07C3                     l2247:	
   964                           ;main.c: 94: serial_out('"');
   965  07C3  3022               	movlw	(022h)
   966  07C4  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   967                           	line	95
   968                           	
   969  07C9                     l2249:	
   970                           ;main.c: 95: serial_out(',');
   971  07C9  302C               	movlw	(02Ch)
   972  07CA  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   973                           	line	96
   974                           	
   975  07CF                     l2251:	
   976                           ;main.c: 96: serial_out('1');
   977  07CF  3031               	movlw	(031h)
   978  07D0  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   979                           	line	97
   980                           	
   981  07D5                     l2253:	
   982                           ;main.c: 97: serial_out(0x0d);
   983  07D5  300D               	movlw	(0Dh)
   984  07D6  120A  118A  243E   	fcall	_serial_out
              120A  118A         
   985                           	line	98
   986                           	
   987  07DB                     l2255:	
   988                           ;main.c: 98: _delay((unsigned long)((2000)*(20e6/4000.0)));
   989                           	opt asmopt_off
   990  07DB  3033               movlw  51
   991  07DC  00F5               movwf	((??_gprs+0)+0+2),f
   992  07DD  3089               movlw	137
   993  07DE  00F4               movwf	((??_gprs+0)+0+1),f
   994  07DF  3000               	movlw	256
   995  07E0  00F3               movwf	((??_gprs+0)+0),f
   996  07E1                     u2407:
   997  07E1  0BF3               	decfsz	((??_gprs+0)+0),f
   998  07E2  2FE1               	goto	u2407
   999  07E3  0BF4               	decfsz	((??_gprs+0)+0+1),f
  1000  07E4  2FE1               	goto	u2407
  1001  07E5  0BF5               	decfsz	((??_gprs+0)+0+2),f
  1002  07E6  2FE1               	goto	u2407
  1003                           opt asmopt_on
  1004                           
  1005                           	line	99
  1006                           ;main.c: 99: serial_display("AT+HTTPACTION=1");
  1007  07E7  3017               	movlw	((STR_13-__stringbase))&0ffh
  1008  07E8  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
  1009                           	line	100
  1010                           	
  1011  07ED                     l2257:	
  1012                           ;main.c: 100: serial_out(0x0d);
  1013  07ED  300D               	movlw	(0Dh)
  1014  07EE  120A  118A  243E   	fcall	_serial_out
              120A  118A         
  1015                           	line	101
  1016                           	
  1017  07F3                     l2259:	
  1018                           ;main.c: 101: _delay((unsigned long)((1000)*(20e6/4000.0)));
  1019                           	opt asmopt_off
  1020  07F3  301A               movlw  26
  1021  07F4  00F5               movwf	((??_gprs+0)+0+2),f
  1022  07F5  3045               movlw	69
  1023  07F6  00F4               movwf	((??_gprs+0)+0+1),f
  1024  07F7  307E               	movlw	126
  1025  07F8  00F3               movwf	((??_gprs+0)+0),f
  1026  07F9                     u2417:
  1027  07F9  0BF3               	decfsz	((??_gprs+0)+0),f
  1028  07FA  2FF9               	goto	u2417
  1029  07FB  0BF4               	decfsz	((??_gprs+0)+0+1),f
  1030  07FC  2FF9               	goto	u2417
  1031  07FD  0BF5               	decfsz	((??_gprs+0)+0+2),f
  1032  07FE  2FF9               	goto	u2417
  1033                           opt asmopt_on
  1034                           
  1035                           	line	102
  1036                           	
  1037  07FF                     l615:	
  1038  07FF  0008               	return
  1039                           	opt stack 0
  1040                           GLOBAL	__end_of_gprs
  1041  0800                     	__end_of_gprs:
  1042 ;; =============== function _gprs ends ============
  1043                           
  1044                           	signat	_gprs,88
  1045                           	global	_hexa_val
  1046                           psect	text300,local,class=CODE,delta=2
  1047                           global __ptext300
  1048  06C4                     __ptext300:
  1049                           
  1050 ;; *************** function _hexa_val *****************
  1051 ;; Defined at:
  1052 ;;		line 132 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitor
       ing\main.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  val             2    8[COMMON] unsigned int 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;		None               void
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         2       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         2       0       0       0       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    1
  1073 ;; This function calls:
  1074 ;;		___lwdiv
  1075 ;;		___lwmod
  1076 ;;		_lcd_data
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           psect	text300
  1082                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  1083                           	line	132
  1084                           	global	__size_of_hexa_val
  1085  0099                     	__size_of_hexa_val	equ	__end_of_hexa_val-_hexa_val
  1086                           	
  1087  06C4                     _hexa_val:	
  1088                           	opt	stack 6
  1089                           ; Regs used in _hexa_val: [wreg+status,2+status,0+pclath+cstack]
  1090                           	line	133
  1091                           	
  1092  06C4                     l2221:	
  1093                           ;main.c: 133: d=val/1000;
  1094  06C4  30E8               	movlw	low(03E8h)
  1095  06C5  00F0               	movwf	(?___lwdiv)
  1096  06C6  3003               	movlw	high(03E8h)
  1097  06C7  00F1               	movwf	((?___lwdiv))+1
  1098  06C8  0879               	movf	(hexa_val@val+1),w
  1099  06C9  01F3               	clrf	1+(?___lwdiv)+02h
  1100  06CA  07F3               	addwf	1+(?___lwdiv)+02h
  1101  06CB  0878               	movf	(hexa_val@val),w
  1102  06CC  01F2               	clrf	0+(?___lwdiv)+02h
  1103  06CD  07F2               	addwf	0+(?___lwdiv)+02h
  1104                           
  1105  06CE  120A  118A  2595   	fcall	___lwdiv
              120A  118A         
  1106  06D3  0871               	movf	(1+(?___lwdiv)),w
  1107  06D4  1283               	bcf	status, 5	;RP0=0, select bank0
  1108  06D5  1303               	bcf	status, 6	;RP1=0, select bank0
  1109  06D6  01A5               	clrf	(_d+1)
  1110  06D7  07A5               	addwf	(_d+1)
  1111  06D8  0870               	movf	(0+(?___lwdiv)),w
  1112  06D9  01A4               	clrf	(_d)
  1113  06DA  07A4               	addwf	(_d)
  1114                           
  1115                           	line	134
  1116                           ;main.c: 134: j=val%1000;
  1117  06DB  30E8               	movlw	low(03E8h)
  1118  06DC  00F0               	movwf	(?___lwmod)
  1119  06DD  3003               	movlw	high(03E8h)
  1120  06DE  00F1               	movwf	((?___lwmod))+1
  1121  06DF  0879               	movf	(hexa_val@val+1),w
  1122  06E0  01F3               	clrf	1+(?___lwmod)+02h
  1123  06E1  07F3               	addwf	1+(?___lwmod)+02h
  1124  06E2  0878               	movf	(hexa_val@val),w
  1125  06E3  01F2               	clrf	0+(?___lwmod)+02h
  1126  06E4  07F2               	addwf	0+(?___lwmod)+02h
  1127                           
  1128  06E5  120A  118A  2551   	fcall	___lwmod
              120A  118A         
  1129  06EA  0871               	movf	(1+(?___lwmod)),w
  1130  06EB  01FD               	clrf	(_j+1)
  1131  06EC  07FD               	addwf	(_j+1)
  1132  06ED  0870               	movf	(0+(?___lwmod)),w
  1133  06EE  01FC               	clrf	(_j)
  1134  06EF  07FC               	addwf	(_j)
  1135                           
  1136                           	line	135
  1137                           ;main.c: 135: k=j/100;
  1138  06F0  3064               	movlw	low(064h)
  1139  06F1  00F0               	movwf	(?___lwdiv)
  1140  06F2  3000               	movlw	high(064h)
  1141  06F3  00F1               	movwf	((?___lwdiv))+1
  1142  06F4  087D               	movf	(_j+1),w
  1143  06F5  01F3               	clrf	1+(?___lwdiv)+02h
  1144  06F6  07F3               	addwf	1+(?___lwdiv)+02h
  1145  06F7  087C               	movf	(_j),w
  1146  06F8  01F2               	clrf	0+(?___lwdiv)+02h
  1147  06F9  07F2               	addwf	0+(?___lwdiv)+02h
  1148                           
  1149  06FA  120A  118A  2595   	fcall	___lwdiv
              120A  118A         
  1150  06FF  0871               	movf	(1+(?___lwdiv)),w
  1151  0700  1283               	bcf	status, 5	;RP0=0, select bank0
  1152  0701  1303               	bcf	status, 6	;RP1=0, select bank0
  1153  0702  01A7               	clrf	(_k+1)
  1154  0703  07A7               	addwf	(_k+1)
  1155  0704  0870               	movf	(0+(?___lwdiv)),w
  1156  0705  01A6               	clrf	(_k)
  1157  0706  07A6               	addwf	(_k)
  1158                           
  1159                           	line	136
  1160                           ;main.c: 136: l=j%100;
  1161  0707  3064               	movlw	low(064h)
  1162  0708  00F0               	movwf	(?___lwmod)
  1163  0709  3000               	movlw	high(064h)
  1164  070A  00F1               	movwf	((?___lwmod))+1
  1165  070B  087D               	movf	(_j+1),w
  1166  070C  01F3               	clrf	1+(?___lwmod)+02h
  1167  070D  07F3               	addwf	1+(?___lwmod)+02h
  1168  070E  087C               	movf	(_j),w
  1169  070F  01F2               	clrf	0+(?___lwmod)+02h
  1170  0710  07F2               	addwf	0+(?___lwmod)+02h
  1171                           
  1172  0711  120A  118A  2551   	fcall	___lwmod
              120A  118A         
  1173  0716  0871               	movf	(1+(?___lwmod)),w
  1174  0717  1283               	bcf	status, 5	;RP0=0, select bank0
  1175  0718  1303               	bcf	status, 6	;RP1=0, select bank0
  1176  0719  01A9               	clrf	(_l+1)
  1177  071A  07A9               	addwf	(_l+1)
  1178  071B  0870               	movf	(0+(?___lwmod)),w
  1179  071C  01A8               	clrf	(_l)
  1180  071D  07A8               	addwf	(_l)
  1181                           
  1182                           	line	137
  1183                           ;main.c: 137: m=l/10;
  1184  071E  300A               	movlw	low(0Ah)
  1185  071F  00F0               	movwf	(?___lwdiv)
  1186  0720  3000               	movlw	high(0Ah)
  1187  0721  00F1               	movwf	((?___lwdiv))+1
  1188  0722  0829               	movf	(_l+1),w
  1189  0723  01F3               	clrf	1+(?___lwdiv)+02h
  1190  0724  07F3               	addwf	1+(?___lwdiv)+02h
  1191  0725  0828               	movf	(_l),w
  1192  0726  01F2               	clrf	0+(?___lwdiv)+02h
  1193  0727  07F2               	addwf	0+(?___lwdiv)+02h
  1194                           
  1195  0728  120A  118A  2595   	fcall	___lwdiv
              120A  118A         
  1196  072D  0871               	movf	(1+(?___lwdiv)),w
  1197  072E  1283               	bcf	status, 5	;RP0=0, select bank0
  1198  072F  1303               	bcf	status, 6	;RP1=0, select bank0
  1199  0730  01AB               	clrf	(_m+1)
  1200  0731  07AB               	addwf	(_m+1)
  1201  0732  0870               	movf	(0+(?___lwdiv)),w
  1202  0733  01AA               	clrf	(_m)
  1203  0734  07AA               	addwf	(_m)
  1204                           
  1205                           	line	138
  1206                           ;main.c: 138: n=l%10;
  1207  0735  300A               	movlw	low(0Ah)
  1208  0736  00F0               	movwf	(?___lwmod)
  1209  0737  3000               	movlw	high(0Ah)
  1210  0738  00F1               	movwf	((?___lwmod))+1
  1211  0739  0829               	movf	(_l+1),w
  1212  073A  01F3               	clrf	1+(?___lwmod)+02h
  1213  073B  07F3               	addwf	1+(?___lwmod)+02h
  1214  073C  0828               	movf	(_l),w
  1215  073D  01F2               	clrf	0+(?___lwmod)+02h
  1216  073E  07F2               	addwf	0+(?___lwmod)+02h
  1217                           
  1218  073F  120A  118A  2551   	fcall	___lwmod
              120A  118A         
  1219  0744  0871               	movf	(1+(?___lwmod)),w
  1220  0745  1283               	bcf	status, 5	;RP0=0, select bank0
  1221  0746  1303               	bcf	status, 6	;RP1=0, select bank0
  1222  0747  01AD               	clrf	(_n+1)
  1223  0748  07AD               	addwf	(_n+1)
  1224  0749  0870               	movf	(0+(?___lwmod)),w
  1225  074A  01AC               	clrf	(_n)
  1226  074B  07AC               	addwf	(_n)
  1227                           
  1228                           	line	139
  1229                           ;main.c: 139: lcd_data(m+0x30);
  1230  074C  082A               	movf	(_m),w
  1231  074D  3E30               	addlw	030h
  1232  074E  120A  118A  24AB   	fcall	_lcd_data
              120A  118A         
  1233                           	line	140
  1234                           ;main.c: 140: lcd_data(n+0x30);
  1235  0753  1283               	bcf	status, 5	;RP0=0, select bank0
  1236  0754  1303               	bcf	status, 6	;RP1=0, select bank0
  1237  0755  082C               	movf	(_n),w
  1238  0756  3E30               	addlw	030h
  1239  0757  120A  118A  24AB   	fcall	_lcd_data
              120A  118A         
  1240                           	line	141
  1241                           	
  1242  075C                     l639:	
  1243  075C  0008               	return
  1244                           	opt stack 0
  1245                           GLOBAL	__end_of_hexa_val
  1246  075D                     	__end_of_hexa_val:
  1247 ;; =============== function _hexa_val ends ============
  1248                           
  1249                           	signat	_hexa_val,4216
  1250                           	global	_gsm_init
  1251                           psect	text301,local,class=CODE,delta=2
  1252                           global __ptext301
  1253  0648                     __ptext301:
  1254                           
  1255 ;; *************** function _gsm_init *****************
  1256 ;; Defined at:
  1257 ;;		line 48 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitori
       ng\main.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;		None               void
  1264 ;; Registers used:
  1265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0
  1273 ;;      Temps:          3       0       0       0       0
  1274 ;;      Totals:         3       0       0       0       0
  1275 ;;Total ram usage:        3 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    2
  1278 ;; This function calls:
  1279 ;;		_serial_display
  1280 ;;		_serial_out
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           psect	text301
  1286                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  1287                           	line	48
  1288                           	global	__size_of_gsm_init
  1289  007C                     	__size_of_gsm_init	equ	__end_of_gsm_init-_gsm_init
  1290                           	
  1291  0648                     _gsm_init:	
  1292                           	opt	stack 5
  1293                           ; Regs used in _gsm_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1294                           	line	49
  1295                           	
  1296  0648                     l2195:	
  1297                           ;main.c: 49: serial_display("AT");
  1298  0648  3068               	movlw	((STR_3-__stringbase))&0ffh
  1299  0649  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
  1300                           	line	50
  1301                           	
  1302  064E                     l2197:	
  1303                           ;main.c: 50: serial_out(0x0d);
  1304  064E  300D               	movlw	(0Dh)
  1305  064F  120A  118A  243E   	fcall	_serial_out
              120A  118A         
  1306                           	line	51
  1307                           	
  1308  0654                     l2199:	
  1309                           ;main.c: 51: _delay((unsigned long)((500)*(20e6/4000.0)));
  1310                           	opt asmopt_off
  1311  0654  300D               movlw  13
  1312  0655  00F5               movwf	((??_gsm_init+0)+0+2),f
  1313  0656  30A3               movlw	163
  1314  0657  00F4               movwf	((??_gsm_init+0)+0+1),f
  1315  0658  30BD               	movlw	189
  1316  0659  00F3               movwf	((??_gsm_init+0)+0),f
  1317  065A                     u2427:
  1318  065A  0BF3               	decfsz	((??_gsm_init+0)+0),f
  1319  065B  2E5A               	goto	u2427
  1320  065C  0BF4               	decfsz	((??_gsm_init+0)+0+1),f
  1321  065D  2E5A               	goto	u2427
  1322  065E  0BF5               	decfsz	((??_gsm_init+0)+0+2),f
  1323  065F  2E5A               	goto	u2427
  1324  0660  0064               	clrwdt
  1325                           opt asmopt_on
  1326                           
  1327                           	line	52
  1328                           	
  1329  0661                     l2201:	
  1330                           ;main.c: 52: serial_display("AT");
  1331  0661  3068               	movlw	((STR_4-__stringbase))&0ffh
  1332  0662  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
  1333                           	line	53
  1334                           	
  1335  0667                     l2203:	
  1336                           ;main.c: 53: serial_out(0x0d);
  1337  0667  300D               	movlw	(0Dh)
  1338  0668  120A  118A  243E   	fcall	_serial_out
              120A  118A         
  1339                           	line	54
  1340                           ;main.c: 54: _delay((unsigned long)((500)*(20e6/4000.0)));
  1341                           	opt asmopt_off
  1342  066D  300D               movlw  13
  1343  066E  00F5               movwf	((??_gsm_init+0)+0+2),f
  1344  066F  30A3               movlw	163
  1345  0670  00F4               movwf	((??_gsm_init+0)+0+1),f
  1346  0671  30BD               	movlw	189
  1347  0672  00F3               movwf	((??_gsm_init+0)+0),f
  1348  0673                     u2437:
  1349  0673  0BF3               	decfsz	((??_gsm_init+0)+0),f
  1350  0674  2E73               	goto	u2437
  1351  0675  0BF4               	decfsz	((??_gsm_init+0)+0+1),f
  1352  0676  2E73               	goto	u2437
  1353  0677  0BF5               	decfsz	((??_gsm_init+0)+0+2),f
  1354  0678  2E73               	goto	u2437
  1355  0679  0064               	clrwdt
  1356                           opt asmopt_on
  1357                           
  1358                           	line	55
  1359                           	
  1360  067A                     l2205:	
  1361                           ;main.c: 55: serial_display("AT+CREG?");
  1362  067A  304D               	movlw	((STR_5-__stringbase))&0ffh
  1363  067B  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
  1364                           	line	56
  1365                           	
  1366  0680                     l2207:	
  1367                           ;main.c: 56: serial_out(0x0d);
  1368  0680  300D               	movlw	(0Dh)
  1369  0681  120A  118A  243E   	fcall	_serial_out
              120A  118A         
  1370                           	line	57
  1371                           	
  1372  0686                     l2209:	
  1373                           ;main.c: 57: _delay((unsigned long)((500)*(20e6/4000.0)));
  1374                           	opt asmopt_off
  1375  0686  300D               movlw  13
  1376  0687  00F5               movwf	((??_gsm_init+0)+0+2),f
  1377  0688  30A3               movlw	163
  1378  0689  00F4               movwf	((??_gsm_init+0)+0+1),f
  1379  068A  30BD               	movlw	189
  1380  068B  00F3               movwf	((??_gsm_init+0)+0),f
  1381  068C                     u2447:
  1382  068C  0BF3               	decfsz	((??_gsm_init+0)+0),f
  1383  068D  2E8C               	goto	u2447
  1384  068E  0BF4               	decfsz	((??_gsm_init+0)+0+1),f
  1385  068F  2E8C               	goto	u2447
  1386  0690  0BF5               	decfsz	((??_gsm_init+0)+0+2),f
  1387  0691  2E8C               	goto	u2447
  1388  0692  0064               	clrwdt
  1389                           opt asmopt_on
  1390                           
  1391                           	line	58
  1392                           	
  1393  0693                     l2211:	
  1394                           ;main.c: 58: serial_display("AT+SAPBR=1,1");
  1395  0693  3027               	movlw	((STR_6-__stringbase))&0ffh
  1396  0694  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
  1397                           	line	59
  1398                           ;main.c: 59: serial_out(0x0d);
  1399  0699  300D               	movlw	(0Dh)
  1400  069A  120A  118A  243E   	fcall	_serial_out
              120A  118A         
  1401                           	line	60
  1402                           	
  1403  069F                     l2213:	
  1404                           ;main.c: 60: _delay((unsigned long)((1000)*(20e6/4000.0)));
  1405                           	opt asmopt_off
  1406  069F  301A               movlw  26
  1407  06A0  00F5               movwf	((??_gsm_init+0)+0+2),f
  1408  06A1  3045               movlw	69
  1409  06A2  00F4               movwf	((??_gsm_init+0)+0+1),f
  1410  06A3  307E               	movlw	126
  1411  06A4  00F3               movwf	((??_gsm_init+0)+0),f
  1412  06A5                     u2457:
  1413  06A5  0BF3               	decfsz	((??_gsm_init+0)+0),f
  1414  06A6  2EA5               	goto	u2457
  1415  06A7  0BF4               	decfsz	((??_gsm_init+0)+0+1),f
  1416  06A8  2EA5               	goto	u2457
  1417  06A9  0BF5               	decfsz	((??_gsm_init+0)+0+2),f
  1418  06AA  2EA5               	goto	u2457
  1419                           opt asmopt_on
  1420                           
  1421                           	line	61
  1422                           	
  1423  06AB                     l2215:	
  1424                           ;main.c: 61: serial_display("AT+HTTPINIT");
  1425  06AB  3041               	movlw	((STR_7-__stringbase))&0ffh
  1426  06AC  120A  118A  24C8   	fcall	_serial_display
              120A  118A         
  1427                           	line	62
  1428                           	
  1429  06B1                     l2217:	
  1430                           ;main.c: 62: serial_out(0x0d);
  1431  06B1  300D               	movlw	(0Dh)
  1432  06B2  120A  118A  243E   	fcall	_serial_out
              120A  118A         
  1433                           	line	63
  1434                           	
  1435  06B7                     l2219:	
  1436                           ;main.c: 63: _delay((unsigned long)((1000)*(20e6/4000.0)));
  1437                           	opt asmopt_off
  1438  06B7  301A               movlw  26
  1439  06B8  00F5               movwf	((??_gsm_init+0)+0+2),f
  1440  06B9  3045               movlw	69
  1441  06BA  00F4               movwf	((??_gsm_init+0)+0+1),f
  1442  06BB  307E               	movlw	126
  1443  06BC  00F3               movwf	((??_gsm_init+0)+0),f
  1444  06BD                     u2467:
  1445  06BD  0BF3               	decfsz	((??_gsm_init+0)+0),f
  1446  06BE  2EBD               	goto	u2467
  1447  06BF  0BF4               	decfsz	((??_gsm_init+0)+0+1),f
  1448  06C0  2EBD               	goto	u2467
  1449  06C1  0BF5               	decfsz	((??_gsm_init+0)+0+2),f
  1450  06C2  2EBD               	goto	u2467
  1451                           opt asmopt_on
  1452                           
  1453                           	line	64
  1454                           	
  1455  06C3                     l609:	
  1456  06C3  0008               	return
  1457                           	opt stack 0
  1458                           GLOBAL	__end_of_gsm_init
  1459  06C4                     	__end_of_gsm_init:
  1460 ;; =============== function _gsm_init ends ============
  1461                           
  1462                           	signat	_gsm_init,88
  1463                           	global	_lcd_display
  1464                           psect	text302,local,class=CODE,delta=2
  1465                           global __ptext302
  1466  04E9                     __ptext302:
  1467                           
  1468 ;; *************** function _lcd_display *****************
  1469 ;; Defined at:
  1470 ;;		line 168 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitor
       ing\main.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  word            1    wreg     PTR const unsigned char 
  1473 ;;		 -> STR_2(4), STR_1(6), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  word            1    5[COMMON] PTR const unsigned char 
  1476 ;;		 -> STR_2(4), STR_1(6), 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;		None               void
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         1       0       0       0       0
  1488 ;;      Temps:          2       0       0       0       0
  1489 ;;      Totals:         3       0       0       0       0
  1490 ;;Total ram usage:        3 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    1
  1493 ;; This function calls:
  1494 ;;		_lcd_data
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           psect	text302
  1500                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  1501                           	line	168
  1502                           	global	__size_of_lcd_display
  1503  0029                     	__size_of_lcd_display	equ	__end_of_lcd_display-_lcd_display
  1504                           	
  1505  04E9                     _lcd_display:	
  1506                           	opt	stack 6
  1507                           ; Regs used in _lcd_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1508                           ;lcd_display@word stored from wreg
  1509  04E9  00F5               	movwf	(lcd_display@word)
  1510                           	line	169
  1511                           	
  1512  04EA                     l2185:	
  1513                           ;main.c: 169: while(*word)
  1514  04EA  2D04               	goto	l2193
  1515                           	
  1516  04EB                     l652:	
  1517                           	line	171
  1518                           	
  1519  04EB                     l2187:	
  1520                           ;main.c: 170: {
  1521                           ;main.c: 171: lcd_data(*word++);
  1522  04EB  0875               	movf	(lcd_display@word),w
  1523  04EC  0084               	movwf	fsr0
  1524  04ED  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1525  04F2  120A  118A  24AB   	fcall	_lcd_data
              120A  118A         
  1526                           	
  1527  04F7                     l2189:	
  1528  04F7  3001               	movlw	(01h)
  1529  04F8  00F3               	movwf	(??_lcd_display+0)+0
  1530  04F9  0873               	movf	(??_lcd_display+0)+0,w
  1531  04FA  07F5               	addwf	(lcd_display@word),f
  1532                           	line	172
  1533                           	
  1534  04FB                     l2191:	
  1535                           ;main.c: 172: _delay((unsigned long)((1)*(20e6/4000.0)));
  1536                           	opt asmopt_off
  1537  04FB  3007               movlw	7
  1538  04FC  00F4               movwf	((??_lcd_display+0)+0+1),f
  1539  04FD  307D               	movlw	125
  1540  04FE  00F3               movwf	((??_lcd_display+0)+0),f
  1541  04FF                     u2477:
  1542  04FF  0BF3               	decfsz	((??_lcd_display+0)+0),f
  1543  0500  2CFF               	goto	u2477
  1544  0501  0BF4               	decfsz	((??_lcd_display+0)+0+1),f
  1545  0502  2CFF               	goto	u2477
  1546                           opt asmopt_on
  1547                           
  1548  0503  2D04               	goto	l2193
  1549                           	line	173
  1550                           	
  1551  0504                     l651:	
  1552                           	line	169
  1553                           	
  1554  0504                     l2193:	
  1555  0504  0875               	movf	(lcd_display@word),w
  1556  0505  0084               	movwf	fsr0
  1557  0506  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1558  050B  3800               	iorlw	0
  1559  050C  1D03               	skipz
  1560  050D  2D0F               	goto	u2381
  1561  050E  2D10               	goto	u2380
  1562  050F                     u2381:
  1563  050F  2CEB               	goto	l2187
  1564  0510                     u2380:
  1565  0510  2D11               	goto	l654
  1566                           	
  1567  0511                     l653:	
  1568                           	line	174
  1569                           	
  1570  0511                     l654:	
  1571  0511  0008               	return
  1572                           	opt stack 0
  1573                           GLOBAL	__end_of_lcd_display
  1574  0512                     	__end_of_lcd_display:
  1575 ;; =============== function _lcd_display ends ============
  1576                           
  1577                           	signat	_lcd_display,4216
  1578                           	global	_lcd_init
  1579                           psect	text303,local,class=CODE,delta=2
  1580                           global __ptext303
  1581  0475                     __ptext303:
  1582                           
  1583 ;; *************** function _lcd_init *****************
  1584 ;; Defined at:
  1585 ;;		line 143 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitor
       ing\main.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;		None               void
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    1
  1606 ;; This function calls:
  1607 ;;		_command
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           psect	text303
  1613                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  1614                           	line	143
  1615                           	global	__size_of_lcd_init
  1616  0019                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1617                           	
  1618  0475                     _lcd_init:	
  1619                           	opt	stack 6
  1620                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1621                           	line	144
  1622                           	
  1623  0475                     l2183:	
  1624                           ;main.c: 144: command(0x01);
  1625  0475  3001               	movlw	(01h)
  1626  0476  120A  118A  248E   	fcall	_command
              120A  118A         
  1627                           	line	145
  1628                           ;main.c: 145: command(0x06);
  1629  047B  3006               	movlw	(06h)
  1630  047C  120A  118A  248E   	fcall	_command
              120A  118A         
  1631                           	line	146
  1632                           ;main.c: 146: command(0x0c);
  1633  0481  300C               	movlw	(0Ch)
  1634  0482  120A  118A  248E   	fcall	_command
              120A  118A         
  1635                           	line	147
  1636                           ;main.c: 147: command(0x38);
  1637  0487  3038               	movlw	(038h)
  1638  0488  120A  118A  248E   	fcall	_command
              120A  118A         
  1639                           	line	148
  1640                           	
  1641  048D                     l642:	
  1642  048D  0008               	return
  1643                           	opt stack 0
  1644                           GLOBAL	__end_of_lcd_init
  1645  048E                     	__end_of_lcd_init:
  1646 ;; =============== function _lcd_init ends ============
  1647                           
  1648                           	signat	_lcd_init,88
  1649                           	global	_lcd_data
  1650                           psect	text304,local,class=CODE,delta=2
  1651                           global __ptext304
  1652  04AB                     __ptext304:
  1653                           
  1654 ;; *************** function _lcd_data *****************
  1655 ;; Defined at:
  1656 ;;		line 159 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitor
       ing\main.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  D               1    wreg     unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  D               1    2[COMMON] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;		None               void
  1663 ;; Registers used:
  1664 ;;		wreg
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         1       0       0       0       0
  1672 ;;      Temps:          2       0       0       0       0
  1673 ;;      Totals:         3       0       0       0       0
  1674 ;;Total ram usage:        3 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_hexa_val
  1680 ;;		_lcd_display
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           psect	text304
  1684                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  1685                           	line	159
  1686                           	global	__size_of_lcd_data
  1687  001D                     	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
  1688                           	
  1689  04AB                     _lcd_data:	
  1690                           	opt	stack 6
  1691                           ; Regs used in _lcd_data: [wreg]
  1692                           ;lcd_data@D stored from wreg
  1693  04AB  00F2               	movwf	(lcd_data@D)
  1694                           	line	160
  1695                           	
  1696  04AC                     l2175:	
  1697                           ;main.c: 160: PORTD=D;
  1698  04AC  0872               	movf	(lcd_data@D),w
  1699  04AD  1283               	bcf	status, 5	;RP0=0, select bank0
  1700  04AE  1303               	bcf	status, 6	;RP1=0, select bank0
  1701  04AF  0088               	movwf	(8)	;volatile
  1702                           	line	161
  1703                           	
  1704  04B0                     l2177:	
  1705                           ;main.c: 161: RA2=1;
  1706  04B0  1505               	bsf	(42/8),(42)&7
  1707                           	line	162
  1708                           	
  1709  04B1                     l2179:	
  1710                           ;main.c: 162: RA3=1;
  1711  04B1  1585               	bsf	(43/8),(43)&7
  1712                           	line	163
  1713                           ;main.c: 163: _delay((unsigned long)((10)*(20e6/4000.0)));
  1714                           	opt asmopt_off
  1715  04B2  3041               movlw	65
  1716  04B3  00F1               movwf	((??_lcd_data+0)+0+1),f
  1717  04B4  30EE               	movlw	238
  1718  04B5  00F0               movwf	((??_lcd_data+0)+0),f
  1719  04B6                     u2487:
  1720  04B6  0BF0               	decfsz	((??_lcd_data+0)+0),f
  1721  04B7  2CB6               	goto	u2487
  1722  04B8  0BF1               	decfsz	((??_lcd_data+0)+0+1),f
  1723  04B9  2CB6               	goto	u2487
  1724  04BA  0064               	clrwdt
  1725                           opt asmopt_on
  1726                           
  1727                           	line	164
  1728                           	
  1729  04BB                     l2181:	
  1730                           ;main.c: 164: RA3=0;
  1731  04BB  1283               	bcf	status, 5	;RP0=0, select bank0
  1732  04BC  1303               	bcf	status, 6	;RP1=0, select bank0
  1733  04BD  1185               	bcf	(43/8),(43)&7
  1734                           	line	165
  1735                           ;main.c: 165: _delay((unsigned long)((10)*(20e6/4000.0)));
  1736                           	opt asmopt_off
  1737  04BE  3041               movlw	65
  1738  04BF  00F1               movwf	((??_lcd_data+0)+0+1),f
  1739  04C0  30EE               	movlw	238
  1740  04C1  00F0               movwf	((??_lcd_data+0)+0),f
  1741  04C2                     u2497:
  1742  04C2  0BF0               	decfsz	((??_lcd_data+0)+0),f
  1743  04C3  2CC2               	goto	u2497
  1744  04C4  0BF1               	decfsz	((??_lcd_data+0)+0+1),f
  1745  04C5  2CC2               	goto	u2497
  1746  04C6  0064               	clrwdt
  1747                           opt asmopt_on
  1748                           
  1749                           	line	166
  1750                           	
  1751  04C7                     l648:	
  1752  04C7  0008               	return
  1753                           	opt stack 0
  1754                           GLOBAL	__end_of_lcd_data
  1755  04C8                     	__end_of_lcd_data:
  1756 ;; =============== function _lcd_data ends ============
  1757                           
  1758                           	signat	_lcd_data,4216
  1759                           	global	_serial_display
  1760                           psect	text305,local,class=CODE,delta=2
  1761                           global __ptext305
  1762  04C8                     __ptext305:
  1763                           
  1764 ;; *************** function _serial_display *****************
  1765 ;; Defined at:
  1766 ;;		line 111 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitor
       ing\main.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  w               1    wreg     PTR const unsigned char 
  1769 ;;		 -> STR_13(16), STR_12(4), STR_11(13), STR_10(22), 
  1770 ;;		 -> STR_9(4), STR_8(13), STR_7(12), STR_6(13), 
  1771 ;;		 -> STR_5(9), STR_4(3), STR_3(3), 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  w               1    2[COMMON] PTR const unsigned char 
  1774 ;;		 -> STR_13(16), STR_12(4), STR_11(13), STR_10(22), 
  1775 ;;		 -> STR_9(4), STR_8(13), STR_7(12), STR_6(13), 
  1776 ;;		 -> STR_5(9), STR_4(3), STR_3(3), 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;		None               void
  1779 ;; Registers used:
  1780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         0       0       0       0       0
  1787 ;;      Locals:         1       0       0       0       0
  1788 ;;      Temps:          1       0       0       0       0
  1789 ;;      Totals:         2       0       0       0       0
  1790 ;;Total ram usage:        2 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    1
  1793 ;; This function calls:
  1794 ;;		_serial_out
  1795 ;; This function is called by:
  1796 ;;		_gsm_init
  1797 ;;		_gprs
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           psect	text305
  1801                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  1802                           	line	111
  1803                           	global	__size_of_serial_display
  1804  0021                     	__size_of_serial_display	equ	__end_of_serial_display-_serial_display
  1805                           	
  1806  04C8                     _serial_display:	
  1807                           	opt	stack 5
  1808                           ; Regs used in _serial_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1809                           ;serial_display@w stored from wreg
  1810  04C8  00F2               	movwf	(serial_display@w)
  1811                           	line	112
  1812                           	
  1813  04C9                     l2167:	
  1814                           ;main.c: 112: while(*w)
  1815  04C9  2CDB               	goto	l2173
  1816                           	
  1817  04CA                     l625:	
  1818                           	line	114
  1819                           	
  1820  04CA                     l2169:	
  1821                           ;main.c: 113: {
  1822                           ;main.c: 114: serial_out(*w++);
  1823  04CA  0872               	movf	(serial_display@w),w
  1824  04CB  0084               	movwf	fsr0
  1825  04CC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1826  04D1  120A  118A  243E   	fcall	_serial_out
              120A  118A         
  1827                           	
  1828  04D6                     l2171:	
  1829  04D6  3001               	movlw	(01h)
  1830  04D7  00F1               	movwf	(??_serial_display+0)+0
  1831  04D8  0871               	movf	(??_serial_display+0)+0,w
  1832  04D9  07F2               	addwf	(serial_display@w),f
  1833  04DA  2CDB               	goto	l2173
  1834                           	line	115
  1835                           	
  1836  04DB                     l624:	
  1837                           	line	112
  1838                           	
  1839  04DB                     l2173:	
  1840  04DB  0872               	movf	(serial_display@w),w
  1841  04DC  0084               	movwf	fsr0
  1842  04DD  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1843  04E2  3800               	iorlw	0
  1844  04E3  1D03               	skipz
  1845  04E4  2CE6               	goto	u2371
  1846  04E5  2CE7               	goto	u2370
  1847  04E6                     u2371:
  1848  04E6  2CCA               	goto	l2169
  1849  04E7                     u2370:
  1850  04E7  2CE8               	goto	l627
  1851                           	
  1852  04E8                     l626:	
  1853                           	line	116
  1854                           	
  1855  04E8                     l627:	
  1856  04E8  0008               	return
  1857                           	opt stack 0
  1858                           GLOBAL	__end_of_serial_display
  1859  04E9                     	__end_of_serial_display:
  1860 ;; =============== function _serial_display ends ============
  1861                           
  1862                           	signat	_serial_display,4216
  1863                           	global	_command
  1864                           psect	text306,local,class=CODE,delta=2
  1865                           global __ptext306
  1866  048E                     __ptext306:
  1867                           
  1868 ;; *************** function _command *****************
  1869 ;; Defined at:
  1870 ;;		line 150 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitor
       ing\main.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  com             1    wreg     unsigned char 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  com             1    2[COMMON] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;		None               void
  1877 ;; Registers used:
  1878 ;;		wreg
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1884 ;;      Params:         0       0       0       0       0
  1885 ;;      Locals:         1       0       0       0       0
  1886 ;;      Temps:          2       0       0       0       0
  1887 ;;      Totals:         3       0       0       0       0
  1888 ;;Total ram usage:        3 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;;		_lcd_init
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           psect	text306
  1898                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  1899                           	line	150
  1900                           	global	__size_of_command
  1901  001D                     	__size_of_command	equ	__end_of_command-_command
  1902                           	
  1903  048E                     _command:	
  1904                           	opt	stack 7
  1905                           ; Regs used in _command: [wreg]
  1906                           ;command@com stored from wreg
  1907  048E  00F2               	movwf	(command@com)
  1908                           	line	151
  1909                           	
  1910  048F                     l2159:	
  1911                           ;main.c: 151: PORTD=com;
  1912  048F  0872               	movf	(command@com),w
  1913  0490  1283               	bcf	status, 5	;RP0=0, select bank0
  1914  0491  1303               	bcf	status, 6	;RP1=0, select bank0
  1915  0492  0088               	movwf	(8)	;volatile
  1916                           	line	152
  1917                           	
  1918  0493                     l2161:	
  1919                           ;main.c: 152: RA2=0;
  1920  0493  1105               	bcf	(42/8),(42)&7
  1921                           	line	153
  1922                           	
  1923  0494                     l2163:	
  1924                           ;main.c: 153: RA3=1;
  1925  0494  1585               	bsf	(43/8),(43)&7
  1926                           	line	154
  1927                           ;main.c: 154: _delay((unsigned long)((10)*(20e6/4000.0)));
  1928                           	opt asmopt_off
  1929  0495  3041               movlw	65
  1930  0496  00F1               movwf	((??_command+0)+0+1),f
  1931  0497  30EE               	movlw	238
  1932  0498  00F0               movwf	((??_command+0)+0),f
  1933  0499                     u2507:
  1934  0499  0BF0               	decfsz	((??_command+0)+0),f
  1935  049A  2C99               	goto	u2507
  1936  049B  0BF1               	decfsz	((??_command+0)+0+1),f
  1937  049C  2C99               	goto	u2507
  1938  049D  0064               	clrwdt
  1939                           opt asmopt_on
  1940                           
  1941                           	line	155
  1942                           	
  1943  049E                     l2165:	
  1944                           ;main.c: 155: RA3=0;
  1945  049E  1283               	bcf	status, 5	;RP0=0, select bank0
  1946  049F  1303               	bcf	status, 6	;RP1=0, select bank0
  1947  04A0  1185               	bcf	(43/8),(43)&7
  1948                           	line	156
  1949                           ;main.c: 156: _delay((unsigned long)((10)*(20e6/4000.0)));
  1950                           	opt asmopt_off
  1951  04A1  3041               movlw	65
  1952  04A2  00F1               movwf	((??_command+0)+0+1),f
  1953  04A3  30EE               	movlw	238
  1954  04A4  00F0               movwf	((??_command+0)+0),f
  1955  04A5                     u2517:
  1956  04A5  0BF0               	decfsz	((??_command+0)+0),f
  1957  04A6  2CA5               	goto	u2517
  1958  04A7  0BF1               	decfsz	((??_command+0)+0+1),f
  1959  04A8  2CA5               	goto	u2517
  1960  04A9  0064               	clrwdt
  1961                           opt asmopt_on
  1962                           
  1963                           	line	157
  1964                           	
  1965  04AA                     l645:	
  1966  04AA  0008               	return
  1967                           	opt stack 0
  1968                           GLOBAL	__end_of_command
  1969  04AB                     	__end_of_command:
  1970 ;; =============== function _command ends ============
  1971                           
  1972                           	signat	_command,4216
  1973                           	global	___lwmod
  1974                           psect	text307,local,class=CODE,delta=2
  1975                           global __ptext307
  1976  0551                     __ptext307:
  1977                           
  1978 ;; *************** function ___lwmod *****************
  1979 ;; Defined at:
  1980 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.80\sources\lwmod.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  divisor         2    0[COMMON] unsigned int 
  1983 ;;  dividend        2    2[COMMON] unsigned int 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  counter         1    5[COMMON] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  2    0[COMMON] unsigned int 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1995 ;;      Params:         4       0       0       0       0
  1996 ;;      Locals:         1       0       0       0       0
  1997 ;;      Temps:          1       0       0       0       0
  1998 ;;      Totals:         6       0       0       0       0
  1999 ;;Total ram usage:        6 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_hexa_val
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           psect	text307
  2008                           	file	"C:\Program Files\HI-TECH Software\PICC\9.80\sources\lwmod.c"
  2009                           	line	5
  2010                           	global	__size_of___lwmod
  2011  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2012                           	
  2013  0551                     ___lwmod:	
  2014                           	opt	stack 6
  2015                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2016                           	line	8
  2017                           	
  2018  0551                     l2137:	
  2019  0551  0871               	movf	(___lwmod@divisor+1),w
  2020  0552  0470               	iorwf	(___lwmod@divisor),w
  2021  0553  1903               	skipnz
  2022  0554  2D56               	goto	u2311
  2023  0555  2D57               	goto	u2310
  2024  0556                     u2311:
  2025  0556  2D8D               	goto	l2155
  2026  0557                     u2310:
  2027                           	line	9
  2028                           	
  2029  0557                     l2139:	
  2030  0557  01F5               	clrf	(___lwmod@counter)
  2031  0558  1403               	bsf	status,0
  2032  0559  0DF5               	rlf	(___lwmod@counter),f
  2033                           	line	10
  2034  055A  2D67               	goto	l2145
  2035                           	
  2036  055B                     l681:	
  2037                           	line	11
  2038                           	
  2039  055B                     l2141:	
  2040  055B  3001               	movlw	01h
  2041                           	
  2042  055C                     u2325:
  2043  055C  1003               	clrc
  2044  055D  0DF0               	rlf	(___lwmod@divisor),f
  2045  055E  0DF1               	rlf	(___lwmod@divisor+1),f
  2046  055F  3EFF               	addlw	-1
  2047  0560  1D03               	skipz
  2048  0561  2D5C               	goto	u2325
  2049                           	line	12
  2050                           	
  2051  0562                     l2143:	
  2052  0562  3001               	movlw	(01h)
  2053  0563  00F4               	movwf	(??___lwmod+0)+0
  2054  0564  0874               	movf	(??___lwmod+0)+0,w
  2055  0565  07F5               	addwf	(___lwmod@counter),f
  2056  0566  2D67               	goto	l2145
  2057                           	line	13
  2058                           	
  2059  0567                     l680:	
  2060                           	line	10
  2061                           	
  2062  0567                     l2145:	
  2063  0567  1FF1               	btfss	(___lwmod@divisor+1),(15)&7
  2064  0568  2D6A               	goto	u2331
  2065  0569  2D6B               	goto	u2330
  2066  056A                     u2331:
  2067  056A  2D5B               	goto	l2141
  2068  056B                     u2330:
  2069  056B  2D6D               	goto	l2147
  2070                           	
  2071  056C                     l682:	
  2072  056C  2D6D               	goto	l2147
  2073                           	line	14
  2074                           	
  2075  056D                     l683:	
  2076                           	line	15
  2077                           	
  2078  056D                     l2147:	
  2079  056D  0871               	movf	(___lwmod@divisor+1),w
  2080  056E  0273               	subwf	(___lwmod@dividend+1),w
  2081  056F  1D03               	skipz
  2082  0570  2D73               	goto	u2345
  2083  0571  0870               	movf	(___lwmod@divisor),w
  2084  0572  0272               	subwf	(___lwmod@dividend),w
  2085  0573                     u2345:
  2086  0573  1C03               	skipc
  2087  0574  2D76               	goto	u2341
  2088  0575  2D77               	goto	u2340
  2089  0576                     u2341:
  2090  0576  2D7E               	goto	l2151
  2091  0577                     u2340:
  2092                           	line	16
  2093                           	
  2094  0577                     l2149:	
  2095  0577  0870               	movf	(___lwmod@divisor),w
  2096  0578  02F2               	subwf	(___lwmod@dividend),f
  2097  0579  0871               	movf	(___lwmod@divisor+1),w
  2098  057A  1C03               	skipc
  2099  057B  03F3               	decf	(___lwmod@dividend+1),f
  2100  057C  02F3               	subwf	(___lwmod@dividend+1),f
  2101  057D  2D7E               	goto	l2151
  2102                           	
  2103  057E                     l684:	
  2104                           	line	17
  2105                           	
  2106  057E                     l2151:	
  2107  057E  3001               	movlw	01h
  2108                           	
  2109  057F                     u2355:
  2110  057F  1003               	clrc
  2111  0580  0CF1               	rrf	(___lwmod@divisor+1),f
  2112  0581  0CF0               	rrf	(___lwmod@divisor),f
  2113  0582  3EFF               	addlw	-1
  2114  0583  1D03               	skipz
  2115  0584  2D7F               	goto	u2355
  2116                           	line	18
  2117                           	
  2118  0585                     l2153:	
  2119  0585  3001               	movlw	low(01h)
  2120  0586  02F5               	subwf	(___lwmod@counter),f
  2121  0587  1D03               	btfss	status,2
  2122  0588  2D8A               	goto	u2361
  2123  0589  2D8B               	goto	u2360
  2124  058A                     u2361:
  2125  058A  2D6D               	goto	l2147
  2126  058B                     u2360:
  2127  058B  2D8D               	goto	l2155
  2128                           	
  2129  058C                     l685:	
  2130  058C  2D8D               	goto	l2155
  2131                           	line	19
  2132                           	
  2133  058D                     l679:	
  2134                           	line	20
  2135                           	
  2136  058D                     l2155:	
  2137  058D  0873               	movf	(___lwmod@dividend+1),w
  2138  058E  01F1               	clrf	(?___lwmod+1)
  2139  058F  07F1               	addwf	(?___lwmod+1)
  2140  0590  0872               	movf	(___lwmod@dividend),w
  2141  0591  01F0               	clrf	(?___lwmod)
  2142  0592  07F0               	addwf	(?___lwmod)
  2143                           
  2144  0593  2D94               	goto	l686
  2145                           	
  2146  0594                     l2157:	
  2147                           	line	21
  2148                           	
  2149  0594                     l686:	
  2150  0594  0008               	return
  2151                           	opt stack 0
  2152                           GLOBAL	__end_of___lwmod
  2153  0595                     	__end_of___lwmod:
  2154 ;; =============== function ___lwmod ends ============
  2155                           
  2156                           	signat	___lwmod,8314
  2157                           	global	___lwdiv
  2158                           psect	text308,local,class=CODE,delta=2
  2159                           global __ptext308
  2160  0595                     __ptext308:
  2161                           
  2162 ;; *************** function ___lwdiv *****************
  2163 ;; Defined at:
  2164 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.80\sources\lwdiv.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  divisor         2    0[COMMON] unsigned int 
  2167 ;;  dividend        2    2[COMMON] unsigned int 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  quotient        2    5[COMMON] unsigned int 
  2170 ;;  counter         1    7[COMMON] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  2    0[COMMON] unsigned int 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2180 ;;      Params:         4       0       0       0       0
  2181 ;;      Locals:         3       0       0       0       0
  2182 ;;      Temps:          1       0       0       0       0
  2183 ;;      Totals:         8       0       0       0       0
  2184 ;;Total ram usage:        8 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_hexa_val
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           psect	text308
  2193                           	file	"C:\Program Files\HI-TECH Software\PICC\9.80\sources\lwdiv.c"
  2194                           	line	5
  2195                           	global	__size_of___lwdiv
  2196  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2197                           	
  2198  0595                     ___lwdiv:	
  2199                           	opt	stack 6
  2200                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2201                           	line	9
  2202                           	
  2203  0595                     l2113:	
  2204  0595  3000               	movlw	low(0)
  2205  0596  00F5               	movwf	(___lwdiv@quotient)
  2206  0597  3000               	movlw	high(0)
  2207  0598  00F6               	movwf	((___lwdiv@quotient))+1
  2208                           	line	10
  2209  0599  0871               	movf	(___lwdiv@divisor+1),w
  2210  059A  0470               	iorwf	(___lwdiv@divisor),w
  2211  059B  1903               	skipnz
  2212  059C  2D9E               	goto	u2241
  2213  059D  2D9F               	goto	u2240
  2214  059E                     u2241:
  2215  059E  2DDD               	goto	l2133
  2216  059F                     u2240:
  2217                           	line	11
  2218                           	
  2219  059F                     l2115:	
  2220  059F  01F7               	clrf	(___lwdiv@counter)
  2221  05A0  1403               	bsf	status,0
  2222  05A1  0DF7               	rlf	(___lwdiv@counter),f
  2223                           	line	12
  2224  05A2  2DAF               	goto	l2121
  2225                           	
  2226  05A3                     l671:	
  2227                           	line	13
  2228                           	
  2229  05A3                     l2117:	
  2230  05A3  3001               	movlw	01h
  2231                           	
  2232  05A4                     u2255:
  2233  05A4  1003               	clrc
  2234  05A5  0DF0               	rlf	(___lwdiv@divisor),f
  2235  05A6  0DF1               	rlf	(___lwdiv@divisor+1),f
  2236  05A7  3EFF               	addlw	-1
  2237  05A8  1D03               	skipz
  2238  05A9  2DA4               	goto	u2255
  2239                           	line	14
  2240                           	
  2241  05AA                     l2119:	
  2242  05AA  3001               	movlw	(01h)
  2243  05AB  00F4               	movwf	(??___lwdiv+0)+0
  2244  05AC  0874               	movf	(??___lwdiv+0)+0,w
  2245  05AD  07F7               	addwf	(___lwdiv@counter),f
  2246  05AE  2DAF               	goto	l2121
  2247                           	line	15
  2248                           	
  2249  05AF                     l670:	
  2250                           	line	12
  2251                           	
  2252  05AF                     l2121:	
  2253  05AF  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  2254  05B0  2DB2               	goto	u2261
  2255  05B1  2DB3               	goto	u2260
  2256  05B2                     u2261:
  2257  05B2  2DA3               	goto	l2117
  2258  05B3                     u2260:
  2259  05B3  2DB5               	goto	l2123
  2260                           	
  2261  05B4                     l672:	
  2262  05B4  2DB5               	goto	l2123
  2263                           	line	16
  2264                           	
  2265  05B5                     l673:	
  2266                           	line	17
  2267                           	
  2268  05B5                     l2123:	
  2269  05B5  3001               	movlw	01h
  2270                           	
  2271  05B6                     u2275:
  2272  05B6  1003               	clrc
  2273  05B7  0DF5               	rlf	(___lwdiv@quotient),f
  2274  05B8  0DF6               	rlf	(___lwdiv@quotient+1),f
  2275  05B9  3EFF               	addlw	-1
  2276  05BA  1D03               	skipz
  2277  05BB  2DB6               	goto	u2275
  2278                           	line	18
  2279  05BC  0871               	movf	(___lwdiv@divisor+1),w
  2280  05BD  0273               	subwf	(___lwdiv@dividend+1),w
  2281  05BE  1D03               	skipz
  2282  05BF  2DC2               	goto	u2285
  2283  05C0  0870               	movf	(___lwdiv@divisor),w
  2284  05C1  0272               	subwf	(___lwdiv@dividend),w
  2285  05C2                     u2285:
  2286  05C2  1C03               	skipc
  2287  05C3  2DC5               	goto	u2281
  2288  05C4  2DC6               	goto	u2280
  2289  05C5                     u2281:
  2290  05C5  2DCE               	goto	l2129
  2291  05C6                     u2280:
  2292                           	line	19
  2293                           	
  2294  05C6                     l2125:	
  2295  05C6  0870               	movf	(___lwdiv@divisor),w
  2296  05C7  02F2               	subwf	(___lwdiv@dividend),f
  2297  05C8  0871               	movf	(___lwdiv@divisor+1),w
  2298  05C9  1C03               	skipc
  2299  05CA  03F3               	decf	(___lwdiv@dividend+1),f
  2300  05CB  02F3               	subwf	(___lwdiv@dividend+1),f
  2301                           	line	20
  2302                           	
  2303  05CC                     l2127:	
  2304  05CC  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  2305  05CD  2DCE               	goto	l2129
  2306                           	line	21
  2307                           	
  2308  05CE                     l674:	
  2309                           	line	22
  2310                           	
  2311  05CE                     l2129:	
  2312  05CE  3001               	movlw	01h
  2313                           	
  2314  05CF                     u2295:
  2315  05CF  1003               	clrc
  2316  05D0  0CF1               	rrf	(___lwdiv@divisor+1),f
  2317  05D1  0CF0               	rrf	(___lwdiv@divisor),f
  2318  05D2  3EFF               	addlw	-1
  2319  05D3  1D03               	skipz
  2320  05D4  2DCF               	goto	u2295
  2321                           	line	23
  2322                           	
  2323  05D5                     l2131:	
  2324  05D5  3001               	movlw	low(01h)
  2325  05D6  02F7               	subwf	(___lwdiv@counter),f
  2326  05D7  1D03               	btfss	status,2
  2327  05D8  2DDA               	goto	u2301
  2328  05D9  2DDB               	goto	u2300
  2329  05DA                     u2301:
  2330  05DA  2DB5               	goto	l2123
  2331  05DB                     u2300:
  2332  05DB  2DDD               	goto	l2133
  2333                           	
  2334  05DC                     l675:	
  2335  05DC  2DDD               	goto	l2133
  2336                           	line	24
  2337                           	
  2338  05DD                     l669:	
  2339                           	line	25
  2340                           	
  2341  05DD                     l2133:	
  2342  05DD  0876               	movf	(___lwdiv@quotient+1),w
  2343  05DE  01F1               	clrf	(?___lwdiv+1)
  2344  05DF  07F1               	addwf	(?___lwdiv+1)
  2345  05E0  0875               	movf	(___lwdiv@quotient),w
  2346  05E1  01F0               	clrf	(?___lwdiv)
  2347  05E2  07F0               	addwf	(?___lwdiv)
  2348                           
  2349  05E3  2DE4               	goto	l676
  2350                           	
  2351  05E4                     l2135:	
  2352                           	line	26
  2353                           	
  2354  05E4                     l676:	
  2355  05E4  0008               	return
  2356                           	opt stack 0
  2357                           GLOBAL	__end_of___lwdiv
  2358  05E5                     	__end_of___lwdiv:
  2359 ;; =============== function ___lwdiv ends ============
  2360                           
  2361                           	signat	___lwdiv,8314
  2362                           	global	_serial_out
  2363                           psect	text309,local,class=CODE,delta=2
  2364                           global __ptext309
  2365  043E                     __ptext309:
  2366                           
  2367 ;; *************** function _serial_out *****************
  2368 ;; Defined at:
  2369 ;;		line 105 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitor
       ing\main.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  z               1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  z               1    0[COMMON] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;		None               void
  2376 ;; Registers used:
  2377 ;;		wreg
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2383 ;;      Params:         0       0       0       0       0
  2384 ;;      Locals:         1       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0
  2386 ;;      Totals:         1       0       0       0       0
  2387 ;;Total ram usage:        1 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_gsm_init
  2393 ;;		_gprs
  2394 ;;		_serial_display
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           psect	text309
  2398                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  2399                           	line	105
  2400                           	global	__size_of_serial_out
  2401  000C                     	__size_of_serial_out	equ	__end_of_serial_out-_serial_out
  2402                           	
  2403  043E                     _serial_out:	
  2404                           	opt	stack 6
  2405                           ; Regs used in _serial_out: [wreg]
  2406                           ;serial_out@z stored from wreg
  2407  043E  00F0               	movwf	(serial_out@z)
  2408                           	line	106
  2409                           	
  2410  043F                     l2111:	
  2411                           ;main.c: 106: TXREG=z;
  2412  043F  0870               	movf	(serial_out@z),w
  2413  0440  1283               	bcf	status, 5	;RP0=0, select bank0
  2414  0441  1303               	bcf	status, 6	;RP1=0, select bank0
  2415  0442  0099               	movwf	(25)	;volatile
  2416                           	line	107
  2417                           ;main.c: 107: while(!TXIF);
  2418  0443  2C44               	goto	l618
  2419                           	
  2420  0444                     l619:	
  2421                           	
  2422  0444                     l618:	
  2423  0444  1E0C               	btfss	(100/8),(100)&7
  2424  0445  2C47               	goto	u2231
  2425  0446  2C48               	goto	u2230
  2426  0447                     u2231:
  2427  0447  2C44               	goto	l618
  2428  0448                     u2230:
  2429                           	
  2430  0448                     l620:	
  2431                           	line	108
  2432                           ;main.c: 108: TXIF=0;
  2433  0448  120C               	bcf	(100/8),(100)&7
  2434                           	line	109
  2435                           	
  2436  0449                     l621:	
  2437  0449  0008               	return
  2438                           	opt stack 0
  2439                           GLOBAL	__end_of_serial_out
  2440  044A                     	__end_of_serial_out:
  2441 ;; =============== function _serial_out ends ============
  2442                           
  2443                           	signat	_serial_out,4216
  2444                           	global	_adc_conversion
  2445                           psect	text310,local,class=CODE,delta=2
  2446                           global __ptext310
  2447  0512                     __ptext310:
  2448                           
  2449 ;; *************** function _adc_conversion *****************
  2450 ;; Defined at:
  2451 ;;		line 123 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitor
       ing\main.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;		None               void
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, btemp+1
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0
  2467 ;;      Temps:          2       0       0       0       0
  2468 ;;      Totals:         2       0       0       0       0
  2469 ;;Total ram usage:        2 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           psect	text310
  2478                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  2479                           	line	123
  2480                           	global	__size_of_adc_conversion
  2481  003F                     	__size_of_adc_conversion	equ	__end_of_adc_conversion-_adc_conversion
  2482                           	
  2483  0512                     _adc_conversion:	
  2484                           	opt	stack 7
  2485                           ; Regs used in _adc_conversion: [wreg+status,2+status,0+btemp+1]
  2486                           	line	124
  2487                           	
  2488  0512                     l2103:	
  2489                           ;main.c: 124: ADCON0=0XC5;
  2490  0512  30C5               	movlw	(0C5h)
  2491  0513  1283               	bcf	status, 5	;RP0=0, select bank0
  2492  0514  1303               	bcf	status, 6	;RP1=0, select bank0
  2493  0515  009F               	movwf	(31)	;volatile
  2494                           	line	125
  2495                           ;main.c: 125: while(ADGO);
  2496  0516  2D17               	goto	l633
  2497                           	
  2498  0517                     l634:	
  2499                           	
  2500  0517                     l633:	
  2501  0517  191F               	btfsc	(250/8),(250)&7
  2502  0518  2D1A               	goto	u2201
  2503  0519  2D1B               	goto	u2200
  2504  051A                     u2201:
  2505  051A  2D17               	goto	l633
  2506  051B                     u2200:
  2507  051B  2D1C               	goto	l2105
  2508                           	
  2509  051C                     l635:	
  2510                           	line	126
  2511                           	
  2512  051C                     l2105:	
  2513                           ;main.c: 126: a=ADRESL;
  2514  051C  1683               	bsf	status, 5	;RP0=1, select bank1
  2515  051D  1303               	bcf	status, 6	;RP1=0, select bank1
  2516  051E  081E               	movf	(158)^080h,w	;volatile
  2517  051F  00F0               	movwf	(??_adc_conversion+0)+0
  2518  0520  01F1               	clrf	(??_adc_conversion+0)+0+1
  2519  0521  0870               	movf	0+(??_adc_conversion+0)+0,w
  2520  0522  1283               	bcf	status, 5	;RP0=0, select bank0
  2521  0523  1303               	bcf	status, 6	;RP1=0, select bank0
  2522  0524  00A0               	movwf	(_a)
  2523  0525  0871               	movf	1+(??_adc_conversion+0)+0,w
  2524  0526  00A1               	movwf	(_a+1)
  2525                           	line	127
  2526                           ;main.c: 127: b=ADRESH;
  2527  0527  081E               	movf	(30),w	;volatile
  2528  0528  00F0               	movwf	(??_adc_conversion+0)+0
  2529  0529  01F1               	clrf	(??_adc_conversion+0)+0+1
  2530  052A  0870               	movf	0+(??_adc_conversion+0)+0,w
  2531  052B  00FA               	movwf	(_b)
  2532  052C  0871               	movf	1+(??_adc_conversion+0)+0,w
  2533  052D  00FB               	movwf	(_b+1)
  2534                           	line	128
  2535                           	
  2536  052E                     l2107:	
  2537                           ;main.c: 128: b=b*256;
  2538  052E  087B               	movf	(_b+1),w
  2539  052F  00F1               	movwf	(??_adc_conversion+0)+0+1
  2540  0530  087A               	movf	(_b),w
  2541  0531  00F0               	movwf	(??_adc_conversion+0)+0
  2542  0532  3008               	movlw	08h
  2543  0533  00FF               	movwf	btemp+1
  2544  0534                     u2215:
  2545  0534  1003               	clrc
  2546  0535  0DF0               	rlf	(??_adc_conversion+0)+0,f
  2547  0536  0DF1               	rlf	(??_adc_conversion+0)+1,f
  2548  0537  0BFF               	decfsz	btemp+1,f
  2549  0538  2D34               	goto	u2215
  2550  0539  0870               	movf	0+(??_adc_conversion+0)+0,w
  2551  053A  00FA               	movwf	(_b)
  2552  053B  0871               	movf	1+(??_adc_conversion+0)+0,w
  2553  053C  00FB               	movwf	(_b+1)
  2554                           	line	129
  2555                           	
  2556  053D                     l2109:	
  2557                           ;main.c: 129: c=b+a/2;
  2558  053D  0821               	movf	(_a+1),w
  2559  053E  00F1               	movwf	(??_adc_conversion+0)+0+1
  2560  053F  0820               	movf	(_a),w
  2561  0540  00F0               	movwf	(??_adc_conversion+0)+0
  2562  0541  3001               	movlw	01h
  2563  0542                     u2225:
  2564  0542  1003               	clrc
  2565  0543  0CF1               	rrf	(??_adc_conversion+0)+1,f
  2566  0544  0CF0               	rrf	(??_adc_conversion+0)+0,f
  2567  0545  3EFF               	addlw	-1
  2568  0546  1D03               	skipz
  2569  0547  2D42               	goto	u2225
  2570  0548  087A               	movf	(_b),w
  2571  0549  0770               	addwf	0+(??_adc_conversion+0)+0,w
  2572  054A  00A2               	movwf	(_c)
  2573  054B  087B               	movf	(_b+1),w
  2574  054C  1803               	skipnc
  2575  054D  0A7B               	incf	(_b+1),w
  2576  054E  0771               	addwf	1+(??_adc_conversion+0)+0,w
  2577  054F  00A3               	movwf	1+(_c)
  2578                           	line	130
  2579                           	
  2580  0550                     l636:	
  2581  0550  0008               	return
  2582                           	opt stack 0
  2583                           GLOBAL	__end_of_adc_conversion
  2584  0551                     	__end_of_adc_conversion:
  2585 ;; =============== function _adc_conversion ends ============
  2586                           
  2587                           	signat	_adc_conversion,88
  2588                           	global	_serial_init
  2589                           psect	text311,local,class=CODE,delta=2
  2590                           global __ptext311
  2591  044A                     __ptext311:
  2592                           
  2593 ;; *************** function _serial_init *****************
  2594 ;; Defined at:
  2595 ;;		line 66 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitori
       ng\main.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0
  2612 ;;      Totals:         0       0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           psect	text311
  2622                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  2623                           	line	66
  2624                           	global	__size_of_serial_init
  2625  0015                     	__size_of_serial_init	equ	__end_of_serial_init-_serial_init
  2626                           	
  2627  044A                     _serial_init:	
  2628                           	opt	stack 7
  2629                           ; Regs used in _serial_init: [wreg]
  2630                           	line	67
  2631                           	
  2632  044A                     l2085:	
  2633                           ;main.c: 67: SPBRG=129;
  2634  044A  3081               	movlw	(081h)
  2635  044B  1683               	bsf	status, 5	;RP0=1, select bank1
  2636  044C  1303               	bcf	status, 6	;RP1=0, select bank1
  2637  044D  0099               	movwf	(153)^080h	;volatile
  2638                           	line	68
  2639                           	
  2640  044E                     l2087:	
  2641                           ;main.c: 68: BRGH=1;
  2642  044E  1518               	bsf	(1218/8)^080h,(1218)&7
  2643                           	line	69
  2644                           	
  2645  044F                     l2089:	
  2646                           ;main.c: 69: SYNC=0;
  2647  044F  1218               	bcf	(1220/8)^080h,(1220)&7
  2648                           	line	70
  2649                           	
  2650  0450                     l2091:	
  2651                           ;main.c: 70: SPEN=1;
  2652  0450  1283               	bcf	status, 5	;RP0=0, select bank0
  2653  0451  1303               	bcf	status, 6	;RP1=0, select bank0
  2654  0452  1798               	bsf	(199/8),(199)&7
  2655                           	line	71
  2656                           	
  2657  0453                     l2093:	
  2658                           ;main.c: 71: RCIE=1;
  2659  0453  1683               	bsf	status, 5	;RP0=1, select bank1
  2660  0454  1303               	bcf	status, 6	;RP1=0, select bank1
  2661  0455  168C               	bsf	(1125/8)^080h,(1125)&7
  2662                           	line	72
  2663                           	
  2664  0456                     l2095:	
  2665                           ;main.c: 72: CREN=1;
  2666  0456  1283               	bcf	status, 5	;RP0=0, select bank0
  2667  0457  1303               	bcf	status, 6	;RP1=0, select bank0
  2668  0458  1618               	bsf	(196/8),(196)&7
  2669                           	line	73
  2670                           	
  2671  0459                     l2097:	
  2672                           ;main.c: 73: TXEN=1;
  2673  0459  1683               	bsf	status, 5	;RP0=1, select bank1
  2674  045A  1303               	bcf	status, 6	;RP1=0, select bank1
  2675  045B  1698               	bsf	(1221/8)^080h,(1221)&7
  2676                           	line	74
  2677                           	
  2678  045C                     l2099:	
  2679                           ;main.c: 74: GIE=1;
  2680  045C  178B               	bsf	(95/8),(95)&7
  2681                           	line	75
  2682                           	
  2683  045D                     l2101:	
  2684                           ;main.c: 75: PEIE=1;
  2685  045D  170B               	bsf	(94/8),(94)&7
  2686                           	line	76
  2687                           	
  2688  045E                     l612:	
  2689  045E  0008               	return
  2690                           	opt stack 0
  2691                           GLOBAL	__end_of_serial_init
  2692  045F                     	__end_of_serial_init:
  2693 ;; =============== function _serial_init ends ============
  2694                           
  2695                           	signat	_serial_init,88
  2696                           	global	_adc_init
  2697                           psect	text312,local,class=CODE,delta=2
  2698                           global __ptext312
  2699  0439                     __ptext312:
  2700                           
  2701 ;; *************** function _adc_init *****************
  2702 ;; Defined at:
  2703 ;;		line 119 in file "C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based temperature monitor
       ing\main.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;		None               void
  2710 ;; Registers used:
  2711 ;;		wreg
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         0       0       0       0       0
  2718 ;;      Locals:         0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0
  2720 ;;      Totals:         0       0       0       0       0
  2721 ;;Total ram usage:        0 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_main
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           psect	text312
  2730                           	file	"C:\Users\ASHOK\Desktop\7 days Workshop\2nd Day\Session 3\PROGRAMS\11.ToT based te
                                 mperature monitoring\main.c"
  2731                           	line	119
  2732                           	global	__size_of_adc_init
  2733  0005                     	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
  2734                           	
  2735  0439                     _adc_init:	
  2736                           	opt	stack 7
  2737                           ; Regs used in _adc_init: [wreg]
  2738                           	line	120
  2739                           	
  2740  0439                     l2083:	
  2741                           ;main.c: 120: ADCON1=0x8E;
  2742  0439  308E               	movlw	(08Eh)
  2743  043A  1683               	bsf	status, 5	;RP0=1, select bank1
  2744  043B  1303               	bcf	status, 6	;RP1=0, select bank1
  2745  043C  009F               	movwf	(159)^080h	;volatile
  2746                           	line	121
  2747                           	
  2748  043D                     l630:	
  2749  043D  0008               	return
  2750                           	opt stack 0
  2751                           GLOBAL	__end_of_adc_init
  2752  043E                     	__end_of_adc_init:
  2753 ;; =============== function _adc_init ends ============
  2754                           
  2755                           	signat	_adc_init,88
  2756                           psect	text313,local,class=CODE,delta=2
  2757                           global __ptext313
  2758  0000                     __ptext313:
  2759                           	global	btemp
  2760  007E                     	btemp set 07Eh
  2761                           
  2762                           	DABS	1,126,2	;btemp
  2763                           	global	wtemp0
  2764  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Thu Dec 08 07:43:10 2016

                      _a 0020                        _b 007A                        _c 0022  
                      _d 0024                        _j 007C                        _k 0026  
                      _l 0028                        _m 002A                        _n 002C  
                      pc 0002                       fsr 0004                      l603 0626  
                    l612 045E                      l620 0448                      l604 0644  
                    l621 0449                      l605 0645                      l630 043D  
                    l606 0645                      l615 07FF                      l624 04DB  
                    l633 0517                      l625 04CA                      l609 06C3  
                    l634 0517                      l618 0444                      l626 04E8  
                    l642 048D                      l635 051C                      l619 0444  
                    l627 04E8                      l651 0504                      l636 0550  
                    l652 04EB                      l645 04AA                      l653 0511  
                    l670 05AF                      l654 0511                      l671 05A3  
                    l639 075C                      l672 05B4                      l680 0567  
                    l648 04C7                      l673 05B5                      l681 055B  
                    l674 05CE                      l682 056C                      l675 05DC  
                    l683 056D                      l676 05E4                      l684 057E  
                    l669 05DD                      l685 058C                      l686 0594  
                    l679 058D                      _GIE 005F                      _RA2 002A  
                    _RA3 002B                      fsr0 0004                     l2101 045D  
                   l2103 0512                     l2111 043F                     l2105 051C  
                   l2121 05AF                     l2113 0595                     l2201 0661  
                   l2107 052E                     l2131 05D5                     l2123 05B5  
                   l2115 059F                     l2211 0693                     l2203 0667  
                   l2109 053D                     l2125 05C6                     l2117 05A3  
                   l2133 05DD                     l2141 055B                     l2213 069F  
                   l2205 067A                     l2221 06C4                     l2135 05E4  
                   l2127 05CC                     l2119 05AA                     l2151 057E  
                   l2143 0562                     l2215 06AB                     l2207 0680  
                   l2231 0787                     l2223 075D                     l2129 05CE  
                   l2153 0585                     l2145 0567                     l2137 0551  
                   l2161 0493                     l2217 06B1                     l2209 0686  
                   l2241 07B1                     l2233 0790                     l2225 0763  
                   l2083 0439                     l2091 0450                     l2147 056D  
                   l2139 0557                     l2155 058D                     l2163 0494  
                   l2171 04D6                     l2219 06B7                     l2251 07CF  
                   l2243 07B7                     l2235 0799                     l2227 0769  
                   l2093 0453                     l2085 044A                     l2157 0594  
                   l2149 0577                     l2165 049E                     l2173 04DB  
                   l2181 04BB                     l2253 07D5                     l2245 07BD  
                   l2237 079F                     l2229 0781                     l2261 05E5  
                   l2095 0456                     l2087 044E                     l2159 048F  
                   l2167 04C9                     l2175 04AC                     l2183 0475  
                   l2191 04FB                     l2255 07DB                     l2247 07C3  
                   l2239 07A5                     l2271 05F9                     l2263 05E9  
                   l2097 0459                     l2089 044F                     l2169 04CA  
                   l2177 04B0                     l2193 0504                     l2185 04EA  
                   l2257 07ED                     l2249 07C9                     l2281 0615  
                   l2273 05FE                     l2265 05EC                     l2099 045C  
                   l2179 04B1                     l2187 04EB                     l2195 0648  
                   l2259 07F3                     l2291 0631                     l2283 061B  
                   l2275 0603                     l2267 05EF                     l2189 04F7  
                   l2197 064E                     l2293 063E                     l2285 0620  
                   l2277 0609                     l2269 05F2                     l2199 0654  
                   l2287 0626                     l2279 060F                     l2289 062B  
                   _ADGO 00FA                     STR_1 005E                     STR_2 006C  
                   STR_3 0070                     STR_4 0070                     STR_5 0055  
                   STR_6 002F                     STR_7 0049                     STR_8 003C  
                   STR_9 0068                     _BRGH 04C2                     _CREN 00C4  
                   u2200 051B                     u2201 051A                     u2300 05DB  
                   u2301 05DA                     u2230 0448                     u2310 0557  
                   u2215 0534                     u2231 0447                     u2311 0556  
                   u2240 059F                     u2225 0542                     u2241 059E  
                   u2330 056B                     u2331 056A                     u2260 05B3  
                   u2340 0577                     u2261 05B2                     u2341 0576  
                   u2325 055C                     u2255 05A4                     u2407 07E1  
                   u2280 05C6                     u2360 058B                     u2281 05C5  
                   u2361 058A                     u2345 0573                     u2417 07F9  
                   u2370 04E7                     u2275 05B6                     u2355 057F  
                   u2507 0499                     u2371 04E6                     u2427 065A  
                   u2380 0510                     u2285 05C2                     u2517 04A5  
                   u2381 050F                     u2437 0673                     u2295 05CF  
                   u2447 068C                     u2457 06A5                     u2467 06BD  
                   u2477 04FF                     u2397 07AB                     u2487 04B6  
                   u2497 04C2                     _PEIE 005E                     _RCIE 0465  
                   _SPEN 00C7                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4                     _main 05E5                     _gprs 075D  
                   btemp 007E                     start 0000              hexa_val@val 0078  
                  ?_main 0070                    ?_gprs 0070                    STR_10 0009  
                  STR_11 003C                    STR_12 0064                    STR_13 001F  
        __end_of___lwdiv 05E5          __end_of___lwmod 0595                    _SPBRG 0099  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TXREG 0019          __end_of_command 04AB                    pclath 000A  
                  status 0003                    wtemp0 007E             __end_of_main 0648  
           __end_of_gprs 0800                   ??_main 007A                   ??_gprs 0073  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E  __size_of_adc_conversion 003F         __end_of_adc_init 043E  
       __end_of_lcd_data 04C8             ?_serial_init 0070         __end_of_lcd_init 048E  
   __size_of_lcd_display 0029         __end_of_hexa_val 075D                ??___lwdiv 0074  
              ??___lwmod 0074         __end_of_gsm_init 06C4                ??_command 0070  
         __pcstackCOMMON 0070  __size_of_serial_display 0021               __pbssBANK0 0020  
             __pmaintext 05E5          lcd_display@word 0075                ?_adc_init 0070  
              ?_lcd_data 0070           _adc_conversion 0512                ?_lcd_init 0070  
              ?_hexa_val 0078                ?_gsm_init 0070                  ___lwdiv 0595  
                ___lwmod 0551     __size_of_serial_init 0015               ??_adc_init 0070  
                _command 048E   __end_of_adc_conversion 0551               ??_lcd_data 0070  
            serial_out@z 0070               ??_lcd_init 0073     end_of_initialization 0471  
             ??_hexa_val 007A               ??_gsm_init 0073               _serial_out 043E  
         _serial_display 04C8          ?_adc_conversion 0070               command@com 0072  
          ??_lcd_display 0073   __end_of_serial_display 04E9      start_initialization 045F  
            ?_serial_out 0070          ?_serial_display 0070      __end_of_lcd_display 0512  
      __size_of_adc_init 0005              __pbssCOMMON 007A        __size_of_lcd_data 001D  
      __size_of_lcd_init 0019        __size_of_hexa_val 0099        __size_of_gsm_init 007C  
       ___lwdiv@dividend 0072                __ptext300 06C4                __ptext301 0648  
              __ptext310 0512                __ptext302 04E9                __ptext311 044A  
              __ptext303 0475                __ptext312 0439                __ptext304 04AB  
              __ptext313 0000                __ptext305 04C8                __ptext306 048E  
              __ptext307 0551                __ptext308 0595                __ptext309 043E  
              __ptext298 0000                __ptext299 075D                 ?___lwdiv 0070  
               ?___lwmod 0070                __pstrings 0003                 ?_command 0070  
       ___lwdiv@quotient 0075      __size_of_serial_out 000C              _lcd_display 04E9  
          ??_serial_init 0070                lcd_data@D 0072         ??_adc_conversion 0070  
            __stringbase 0008         __size_of___lwdiv 0050         __size_of___lwmod 0044  
    __end_of_serial_init 045F                 _adc_init 0439         __size_of_command 001D  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 _lcd_data 04AB  
               _lcd_init 0475                 _hexa_val 06C4                 _gsm_init 0648  
          __size_of_main 0063            __size_of_gprs 00A3         ??_serial_display 0071  
           ??_serial_out 0070       __end_of_serial_out 044A         ___lwmod@dividend 0072  
              stringcode 0003              _serial_init 044A          ___lwmod@divisor 0070  
        ___lwmod@counter 0075                 stringdir 0003                 stringtab 0003  
           ?_lcd_display 0070          serial_display@w 0072  
